{"map":"{\"version\":3,\"sources\":[\"/Users/alberto/Apps/gothw/node_modules/core-js/modules/es6.function.name.js\",\"/Users/alberto/Apps/gothw/node_modules/@glidejs/glide/dist/glide.esm.js\"],\"names\":[\"dP\",\"__webpack_require__\",\"f\",\"FProto\",\"Function\",\"prototype\",\"nameRE\",\"configurable\",\"get\",\"this\",\"match\",\"e\",\"defaults\",\"type\",\"startAt\",\"perView\",\"focusAt\",\"gap\",\"autoplay\",\"hoverpause\",\"keyboard\",\"bound\",\"swipeThreshold\",\"dragThreshold\",\"perTouch\",\"touchRatio\",\"touchAngle\",\"animationDuration\",\"rewind\",\"rewindDuration\",\"animationTimingFunc\",\"throttle\",\"direction\",\"peek\",\"breakpoints\",\"classes\",\"ltr\",\"rtl\",\"slider\",\"carousel\",\"swipeable\",\"dragging\",\"cloneSlide\",\"activeNav\",\"activeSlide\",\"disabledArrow\",\"warn\",\"msg\",\"console\",\"error\",\"_typeof\",\"Symbol\",\"iterator\",\"obj\",\"constructor\",\"classCallCheck\",\"instance\",\"Constructor\",\"TypeError\",\"createClass\",\"defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"protoProps\",\"staticProps\",\"_extends\",\"assign\",\"arguments\",\"source\",\"hasOwnProperty\",\"call\",\"possibleConstructorReturn\",\"self\",\"ReferenceError\",\"toInt\",\"value\",\"parseInt\",\"isString\",\"isObject\",\"isFunction\",\"isUndefined\",\"isArray\",\"Array\",\"define\",\"prop\",\"definition\",\"mergeOptions\",\"settings\",\"options\",\"EventsBus\",\"events\",\"undefined\",\"hop\",\"event\",\"handler\",\"on\",\"index\",\"push\",\"remove\",\"context\",\"emit\",\"forEach\",\"item\",\"Glide\",\"selector\",\"_c\",\"_t\",\"_e\",\"disabled\",\"extensions\",\"glide\",\"components\",\"name\",\"_name\",\"mount\",\"transformers\",\"pattern\",\"Run\",\"make\",\"distance\",\"Transition\",\"disable\",\"Move\",\"interval\",\"_o\",\"set\",\"o\",\"_i\",\"_d\",\"status\",\"now\",\"Date\",\"getTime\",\"func\",\"wait\",\"timeout\",\"args\",\"result\",\"previous\",\"later\",\"leading\",\"apply\",\"throttled\",\"at\",\"remaining\",\"clearTimeout\",\"trailing\",\"setTimeout\",\"cancel\",\"MARGIN_TYPE\",\"siblings\",\"node\",\"parentNode\",\"n\",\"firstChild\",\"matched\",\"nextSibling\",\"nodeType\",\"exist\",\"window\",\"HTMLElement\",\"TRACK_SELECTOR\",\"EventsBinder\",\"listeners\",\"el\",\"closure\",\"capture\",\"addEventListener\",\"removeEventListener\",\"VALID_DIRECTIONS\",\"FLIPED_MOVEMENTS\",\">\",\"<\",\"=\",\"Rtl\",\"Components\",\"modify\",\"translate\",\"Direction\",\"is\",\"Gap\",\"Gaps\",\"Grow\",\"Clones\",\"grow\",\"Peeking\",\"Peek\",\"before\",\"Focusing\",\"width\",\"Sizes\",\"slideWidth\",\"supportsPassive\",\"opts\",\"supportsPassive$1\",\"START_EVENTS\",\"MOVE_EVENTS\",\"END_EVENTS\",\"MOUSE_EVENTS\",\"NAV_SELECTOR\",\"CONTROLS_SELECTOR\",\"sortBreakpoints\",\"points\",\"keys\",\"sort\",\"reduce\",\"r\",\"k\",\"COMPONENTS\",\"Html\",\"root\",\"track\",\"querySelector\",\"slides\",\"slice\",\"wrapper\",\"children\",\"filter\",\"slide\",\"classList\",\"contains\",\"_r\",\"document\",\"t\",\"Translate\",\"Events\",\"transform\",\"TRANSFORMERS\",\"concat\",\"mutate\",\"transformer\",\"mutator\",\"style\",\"isType\",\"isOffset\",\"after\",\"movement\",\"compose\",\"property\",\"duration\",\"transition\",\"callback\",\"enable\",\"offset\",\"resolve\",\"token\",\"split\",\"join\",\"addClass\",\"add\",\"removeClass\",\"_v\",\"indexOf\",\"setupSlides\",\"setupWrapper\",\"dimention\",\"wrapperSize\",\"offsetWidth\",\"reductor\",\"len\",\"marginLeft\",\"marginRight\",\"_this\",\"items\",\"collect\",\"_Glide$settings\",\"part\",\"start\",\"end\",\"Math\",\"max\",\"floor\",\"clone\",\"cloneNode\",\"_clone\",\"unshift\",\"append\",\"_Components$Html\",\"half\",\"prepend\",\"reverse\",\"appendChild\",\"_i2\",\"insertBefore\",\"_i3\",\"removeChild\",\"Resize\",\"Binder\",\"bind\",\"unbind\",\"off\",\"destroy\",\"Build\",\"typeClass\",\"activeClass\",\"sibling\",\"removeClasses\",\"move\",\"calculate\",\"isStart\",\"isEnd\",\"steps\",\"countableSteps\",\"min\",\"_m\",\"step\",\"substr\",\"Swipe\",\"swipeSin\",\"swipeStartX\",\"swipeStartY\",\"passive\",\"bindSwipeStart\",\"swipe\",\"touches\",\"pageX\",\"pageY\",\"bindSwipeMove\",\"bindSwipeEnd\",\"subExSx\",\"subEySy\",\"powEX\",\"abs\",\"powEY\",\"swipeHypotenuse\",\"sqrt\",\"swipeCathetus\",\"asin\",\"PI\",\"stopPropagation\",\"parseFloat\",\"threshold\",\"swipeDistance\",\"swipeDeg\",\"round\",\"unbindSwipeMove\",\"unbindSwipeEnd\",\"unbindSwipeStart\",\"_this2\",\"_this3\",\"changedTouches\",\"Images\",\"dragstart\",\"preventDefault\",\"Anchors\",\"detached\",\"prevented\",\"_a\",\"querySelectorAll\",\"click\",\"detach\",\"draggable\",\"setAttribute\",\"getAttribute\",\"removeAttribute\",\"attach\",\"Controls\",\"_n\",\"addBindings\",\"setActive\",\"removeActive\",\"controls\",\"removeBindings\",\"elements\",\"currentTarget\",\"Keyboard\",\"press\",\"keyCode\",\"Autoplay\",\"setInterval\",\"stop\",\"time\",\"clearInterval\",\"Breakpoints\",\"matchMedia\",\"point\",\"matches\",\"Glide$1\",\"_Core\",\"Glide$$1\",\"__proto__\",\"getPrototypeOf\",\"subClass\",\"superClass\",\"create\",\"setPrototypeOf\",\"inherits\",\"object\",\"receiver\",\"desc\",\"getOwnPropertyDescriptor\",\"parent\",\"getter\",\"__webpack_exports__\"],\"mappings\":\"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\",\"sourcesContent\":[\"var dP = require('./_object-dp').f;\\nvar FProto = Function.prototype;\\nvar nameRE = /^\\\\s*function ([^ (]*)/;\\nvar NAME = 'name';\\n\\n// 19.2.4.2 name\\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\\n  configurable: true,\\n  get: function () {\\n    try {\\n      return ('' + this).match(nameRE)[1];\\n    } catch (e) {\\n      return '';\\n    }\\n  }\\n});\\n\",\"/*!\\n * Glide.js v3.3.0\\n * (c) 2013-2019 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\\n * Released under the MIT License.\\n */\\n\\nvar defaults = {\\n  /**\\n   * Type of the movement.\\n   *\\n   * Available types:\\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\\n   *\\n   * @type {String}\\n   */\\n  type: 'slider',\\n\\n  /**\\n   * Start at specific slide number defined with zero-based index.\\n   *\\n   * @type {Number}\\n   */\\n  startAt: 0,\\n\\n  /**\\n   * A number of slides visible on the single viewport.\\n   *\\n   * @type {Number}\\n   */\\n  perView: 1,\\n\\n  /**\\n   * Focus currently active slide at a specified position in the track.\\n   *\\n   * Available inputs:\\n   * `center` - Current slide will be always focused at the center of a track.\\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\\n   *\\n   * @type {String|Number}\\n   */\\n  focusAt: 0,\\n\\n  /**\\n   * A size of the gap added between slides.\\n   *\\n   * @type {Number}\\n   */\\n  gap: 10,\\n\\n  /**\\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\\n   *\\n   * @type {Number|Boolean}\\n   */\\n  autoplay: false,\\n\\n  /**\\n   * Stop autoplay on mouseover event.\\n   *\\n   * @type {Boolean}\\n   */\\n  hoverpause: true,\\n\\n  /**\\n   * Allow for changing slides with left and right keyboard arrows.\\n   *\\n   * @type {Boolean}\\n   */\\n  keyboard: true,\\n\\n  /**\\n   * Stop running `perView` number of slides from the end. Use this\\n   * option if you don't want to have an empty space after\\n   * a slider. Works only with `slider` type and a\\n   * non-centered `focusAt` setting.\\n   *\\n   * @type {Boolean}\\n   */\\n  bound: false,\\n\\n  /**\\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\\n   *\\n   * @type {Number|Boolean}\\n   */\\n  swipeThreshold: 80,\\n\\n  /**\\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\\n   *\\n   * @type {Number|Boolean}\\n   */\\n  dragThreshold: 120,\\n\\n  /**\\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\\n   *\\n   * @type {Number|Boolean}\\n   */\\n  perTouch: false,\\n\\n  /**\\n   * Moving distance ratio of the slides on a swiping and dragging.\\n   *\\n   * @type {Number}\\n   */\\n  touchRatio: 0.5,\\n\\n  /**\\n   * Angle required to activate slides moving on swiping or dragging.\\n   *\\n   * @type {Number}\\n   */\\n  touchAngle: 45,\\n\\n  /**\\n   * Duration of the animation in milliseconds.\\n   *\\n   * @type {Number}\\n   */\\n  animationDuration: 400,\\n\\n  /**\\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\\n   *\\n   * @type {Boolean}\\n   */\\n  rewind: true,\\n\\n  /**\\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\\n   *\\n   * @type {Number}\\n   */\\n  rewindDuration: 800,\\n\\n  /**\\n   * Easing function for the animation.\\n   *\\n   * @type {String}\\n   */\\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\\n\\n  /**\\n   * Throttle costly events at most once per every wait milliseconds.\\n   *\\n   * @type {Number}\\n   */\\n  throttle: 10,\\n\\n  /**\\n   * Moving direction mode.\\n   *\\n   * Available inputs:\\n   * - 'ltr' - left to right movement,\\n   * - 'rtl' - right to left movement.\\n   *\\n   * @type {String}\\n   */\\n  direction: 'ltr',\\n\\n  /**\\n   * The distance value of the next and previous viewports which\\n   * have to peek in the current view. Accepts number and\\n   * pixels as a string. Left and right peeking can be\\n   * set up separately with a directions object.\\n   *\\n   * For example:\\n   * `100` - Peek 100px on the both sides.\\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\\n   *\\n   * @type {Number|String|Object}\\n   */\\n  peek: 0,\\n\\n  /**\\n   * Collection of options applied at specified media breakpoints.\\n   * For example: display two slides per view under 800px.\\n   * `{\\n   *   '800px': {\\n   *     perView: 2\\n   *   }\\n   * }`\\n   */\\n  breakpoints: {},\\n\\n  /**\\n   * Collection of internally used HTML classes.\\n   *\\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\\n   * @type {Object}\\n   */\\n  classes: {\\n    direction: {\\n      ltr: 'glide--ltr',\\n      rtl: 'glide--rtl'\\n    },\\n    slider: 'glide--slider',\\n    carousel: 'glide--carousel',\\n    swipeable: 'glide--swipeable',\\n    dragging: 'glide--dragging',\\n    cloneSlide: 'glide__slide--clone',\\n    activeNav: 'glide__bullet--active',\\n    activeSlide: 'glide__slide--active',\\n    disabledArrow: 'glide__arrow--disabled'\\n  }\\n};\\n\\n/**\\n * Outputs warning message to the bowser console.\\n *\\n * @param  {String} msg\\n * @return {Void}\\n */\\nfunction warn(msg) {\\n  console.error(\\\"[Glide warn]: \\\" + msg);\\n}\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) {\\n  return typeof obj;\\n} : function (obj) {\\n  return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n};\\n\\nvar classCallCheck = function (instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n};\\n\\nvar createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];\\n      descriptor.enumerable = descriptor.enumerable || false;\\n      descriptor.configurable = true;\\n      if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n      Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }\\n\\n  return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n    if (staticProps) defineProperties(Constructor, staticProps);\\n    return Constructor;\\n  };\\n}();\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];\\n\\n    for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }\\n\\n  return target;\\n};\\n\\nvar get = function get(object, property, receiver) {\\n  if (object === null) object = Function.prototype;\\n  var desc = Object.getOwnPropertyDescriptor(object, property);\\n\\n  if (desc === undefined) {\\n    var parent = Object.getPrototypeOf(object);\\n\\n    if (parent === null) {\\n      return undefined;\\n    } else {\\n      return get(parent, property, receiver);\\n    }\\n  } else if (\\\"value\\\" in desc) {\\n    return desc.value;\\n  } else {\\n    var getter = desc.get;\\n\\n    if (getter === undefined) {\\n      return undefined;\\n    }\\n\\n    return getter.call(receiver);\\n  }\\n};\\n\\nvar inherits = function (subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass);\\n  }\\n\\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\\n    constructor: {\\n      value: subClass,\\n      enumerable: false,\\n      writable: true,\\n      configurable: true\\n    }\\n  });\\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n};\\n\\nvar possibleConstructorReturn = function (self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }\\n\\n  return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n};\\n\\n/**\\n * Converts value entered as number\\n * or string to integer value.\\n *\\n * @param {String} value\\n * @returns {Number}\\n */\\nfunction toInt(value) {\\n  return parseInt(value);\\n}\\n\\n/**\\n * Converts value entered as number\\n * or string to flat value.\\n *\\n * @param {String} value\\n * @returns {Number}\\n */\\nfunction toFloat(value) {\\n  return parseFloat(value);\\n}\\n\\n/**\\n * Indicates whether the specified value is a string.\\n *\\n * @param  {*}   value\\n * @return {Boolean}\\n */\\nfunction isString(value) {\\n  return typeof value === 'string';\\n}\\n\\n/**\\n * Indicates whether the specified value is an object.\\n *\\n * @param  {*} value\\n * @return {Boolean}\\n *\\n * @see https://github.com/jashkenas/underscore\\n */\\nfunction isObject(value) {\\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\\n\\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\\n}\\n\\n/**\\n * Indicates whether the specified value is a number.\\n *\\n * @param  {*} value\\n * @return {Boolean}\\n */\\nfunction isNumber(value) {\\n  return typeof value === 'number';\\n}\\n\\n/**\\n * Indicates whether the specified value is a function.\\n *\\n * @param  {*} value\\n * @return {Boolean}\\n */\\nfunction isFunction(value) {\\n  return typeof value === 'function';\\n}\\n\\n/**\\n * Indicates whether the specified value is undefined.\\n *\\n * @param  {*} value\\n * @return {Boolean}\\n */\\nfunction isUndefined(value) {\\n  return typeof value === 'undefined';\\n}\\n\\n/**\\n * Indicates whether the specified value is an array.\\n *\\n * @param  {*} value\\n * @return {Boolean}\\n */\\nfunction isArray(value) {\\n  return value.constructor === Array;\\n}\\n\\n/**\\n * Creates and initializes specified collection of extensions.\\n * Each extension receives access to instance of glide and rest of components.\\n *\\n * @param {Object} glide\\n * @param {Object} extensions\\n *\\n * @returns {Object}\\n */\\nfunction mount(glide, extensions, events) {\\n  var components = {};\\n\\n  for (var name in extensions) {\\n    if (isFunction(extensions[name])) {\\n      components[name] = extensions[name](glide, components, events);\\n    } else {\\n      warn('Extension must be a function');\\n    }\\n  }\\n\\n  for (var _name in components) {\\n    if (isFunction(components[_name].mount)) {\\n      components[_name].mount();\\n    }\\n  }\\n\\n  return components;\\n}\\n\\n/**\\n * Defines getter and setter property on the specified object.\\n *\\n * @param  {Object} obj         Object where property has to be defined.\\n * @param  {String} prop        Name of the defined property.\\n * @param  {Object} definition  Get and set definitions for the property.\\n * @return {Void}\\n */\\nfunction define(obj, prop, definition) {\\n  Object.defineProperty(obj, prop, definition);\\n}\\n\\n/**\\n * Sorts aphabetically object keys.\\n *\\n * @param  {Object} obj\\n * @return {Object}\\n */\\nfunction sortKeys(obj) {\\n  return Object.keys(obj).sort().reduce(function (r, k) {\\n    r[k] = obj[k];\\n\\n    return r[k], r;\\n  }, {});\\n}\\n\\n/**\\n * Merges passed settings object with default options.\\n *\\n * @param  {Object} defaults\\n * @param  {Object} settings\\n * @return {Object}\\n */\\nfunction mergeOptions(defaults, settings) {\\n  var options = _extends({}, defaults, settings);\\n\\n  // `Object.assign` do not deeply merge objects, so we\\n  // have to do it manually for every nested object\\n  // in options. Although it does not look smart,\\n  // it's smaller and faster than some fancy\\n  // merging deep-merge algorithm script.\\n  if (settings.hasOwnProperty('classes')) {\\n    options.classes = _extends({}, defaults.classes, settings.classes);\\n\\n    if (settings.classes.hasOwnProperty('direction')) {\\n      options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\\n    }\\n  }\\n\\n  if (settings.hasOwnProperty('breakpoints')) {\\n    options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\\n  }\\n\\n  return options;\\n}\\n\\nvar EventsBus = function () {\\n  /**\\n   * Construct a EventBus instance.\\n   *\\n   * @param {Object} events\\n   */\\n  function EventsBus() {\\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n    classCallCheck(this, EventsBus);\\n\\n    this.events = events;\\n    this.hop = events.hasOwnProperty;\\n  }\\n\\n  /**\\n   * Adds listener to the specifed event.\\n   *\\n   * @param {String|Array} event\\n   * @param {Function} handler\\n   */\\n\\n\\n  createClass(EventsBus, [{\\n    key: 'on',\\n    value: function on(event, handler) {\\n      if (isArray(event)) {\\n        for (var i = 0; i < event.length; i++) {\\n          this.on(event[i], handler);\\n        }\\n      }\\n\\n      // Create the event's object if not yet created\\n      if (!this.hop.call(this.events, event)) {\\n        this.events[event] = [];\\n      }\\n\\n      // Add the handler to queue\\n      var index = this.events[event].push(handler) - 1;\\n\\n      // Provide handle back for removal of event\\n      return {\\n        remove: function remove() {\\n          delete this.events[event][index];\\n        }\\n      };\\n    }\\n\\n    /**\\n     * Runs registered handlers for specified event.\\n     *\\n     * @param {String|Array} event\\n     * @param {Object=} context\\n     */\\n\\n  }, {\\n    key: 'emit',\\n    value: function emit(event, context) {\\n      if (isArray(event)) {\\n        for (var i = 0; i < event.length; i++) {\\n          this.emit(event[i], context);\\n        }\\n      }\\n\\n      // If the event doesn't exist, or there's no handlers in queue, just leave\\n      if (!this.hop.call(this.events, event)) {\\n        return;\\n      }\\n\\n      // Cycle through events queue, fire!\\n      this.events[event].forEach(function (item) {\\n        item(context || {});\\n      });\\n    }\\n  }]);\\n  return EventsBus;\\n}();\\n\\nvar Glide = function () {\\n  /**\\r\\n   * Construct glide.\\r\\n   *\\r\\n   * @param  {String} selector\\r\\n   * @param  {Object} options\\r\\n   */\\n  function Glide(selector) {\\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n    classCallCheck(this, Glide);\\n\\n    this._c = {};\\n    this._t = [];\\n    this._e = new EventsBus();\\n\\n    this.disabled = false;\\n    this.selector = selector;\\n    this.settings = mergeOptions(defaults, options);\\n    this.index = this.settings.startAt;\\n  }\\n\\n  /**\\r\\n   * Initializes glide.\\r\\n   *\\r\\n   * @param {Object} extensions Collection of extensions to initialize.\\r\\n   * @return {Glide}\\r\\n   */\\n\\n\\n  createClass(Glide, [{\\n    key: 'mount',\\n    value: function mount$$1() {\\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      this._e.emit('mount.before');\\n\\n      if (isObject(extensions)) {\\n        this._c = mount(this, extensions, this._e);\\n      } else {\\n        warn('You need to provide a object on `mount()`');\\n      }\\n\\n      this._e.emit('mount.after');\\n\\n      return this;\\n    }\\n\\n    /**\\r\\n     * Collects an instance `translate` transformers.\\r\\n     *\\r\\n     * @param  {Array} transformers Collection of transformers.\\r\\n     * @return {Void}\\r\\n     */\\n\\n  }, {\\n    key: 'mutate',\\n    value: function mutate() {\\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\\n\\n      if (isArray(transformers)) {\\n        this._t = transformers;\\n      } else {\\n        warn('You need to provide a array on `mutate()`');\\n      }\\n\\n      return this;\\n    }\\n\\n    /**\\r\\n     * Updates glide with specified settings.\\r\\n     *\\r\\n     * @param {Object} settings\\r\\n     * @return {Glide}\\r\\n     */\\n\\n  }, {\\n    key: 'update',\\n    value: function update() {\\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      this.settings = mergeOptions(this.settings, settings);\\n\\n      if (settings.hasOwnProperty('startAt')) {\\n        this.index = settings.startAt;\\n      }\\n\\n      this._e.emit('update');\\n\\n      return this;\\n    }\\n\\n    /**\\r\\n     * Change slide with specified pattern. A pattern must be in the special format:\\r\\n     * `>` - Move one forward\\r\\n     * `<` - Move one backward\\r\\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\\r\\n     * `>>` - Rewinds to end (last slide)\\r\\n     * `<<` - Rewinds to start (first slide)\\r\\n     *\\r\\n     * @param {String} pattern\\r\\n     * @return {Glide}\\r\\n     */\\n\\n  }, {\\n    key: 'go',\\n    value: function go(pattern) {\\n      this._c.Run.make(pattern);\\n\\n      return this;\\n    }\\n\\n    /**\\r\\n     * Move track by specified distance.\\r\\n     *\\r\\n     * @param {String} distance\\r\\n     * @return {Glide}\\r\\n     */\\n\\n  }, {\\n    key: 'move',\\n    value: function move(distance) {\\n      this._c.Transition.disable();\\n      this._c.Move.make(distance);\\n\\n      return this;\\n    }\\n\\n    /**\\r\\n     * Destroy instance and revert all changes done by this._c.\\r\\n     *\\r\\n     * @return {Glide}\\r\\n     */\\n\\n  }, {\\n    key: 'destroy',\\n    value: function destroy() {\\n      this._e.emit('destroy');\\n\\n      return this;\\n    }\\n\\n    /**\\r\\n     * Start instance autoplaying.\\r\\n     *\\r\\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\\r\\n     * @return {Glide}\\r\\n     */\\n\\n  }, {\\n    key: 'play',\\n    value: function play() {\\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\n\\n      if (interval) {\\n        this.settings.autoplay = interval;\\n      }\\n\\n      this._e.emit('play');\\n\\n      return this;\\n    }\\n\\n    /**\\r\\n     * Stop instance autoplaying.\\r\\n     *\\r\\n     * @return {Glide}\\r\\n     */\\n\\n  }, {\\n    key: 'pause',\\n    value: function pause() {\\n      this._e.emit('pause');\\n\\n      return this;\\n    }\\n\\n    /**\\r\\n     * Sets glide into a idle status.\\r\\n     *\\r\\n     * @return {Glide}\\r\\n     */\\n\\n  }, {\\n    key: 'disable',\\n    value: function disable() {\\n      this.disabled = true;\\n\\n      return this;\\n    }\\n\\n    /**\\r\\n     * Sets glide into a active status.\\r\\n     *\\r\\n     * @return {Glide}\\r\\n     */\\n\\n  }, {\\n    key: 'enable',\\n    value: function enable() {\\n      this.disabled = false;\\n\\n      return this;\\n    }\\n\\n    /**\\r\\n     * Adds cuutom event listener with handler.\\r\\n     *\\r\\n     * @param  {String|Array} event\\r\\n     * @param  {Function} handler\\r\\n     * @return {Glide}\\r\\n     */\\n\\n  }, {\\n    key: 'on',\\n    value: function on(event, handler) {\\n      this._e.on(event, handler);\\n\\n      return this;\\n    }\\n\\n    /**\\r\\n     * Checks if glide is a precised type.\\r\\n     *\\r\\n     * @param  {String} name\\r\\n     * @return {Boolean}\\r\\n     */\\n\\n  }, {\\n    key: 'isType',\\n    value: function isType(name) {\\n      return this.settings.type === name;\\n    }\\n\\n    /**\\r\\n     * Gets value of the core options.\\r\\n     *\\r\\n     * @return {Object}\\r\\n     */\\n\\n  }, {\\n    key: 'settings',\\n    get: function get$$1() {\\n      return this._o;\\n    }\\n\\n    /**\\r\\n     * Sets value of the core options.\\r\\n     *\\r\\n     * @param  {Object} o\\r\\n     * @return {Void}\\r\\n     */\\n    ,\\n    set: function set$$1(o) {\\n      if (isObject(o)) {\\n        this._o = o;\\n      } else {\\n        warn('Options must be an `object` instance.');\\n      }\\n    }\\n\\n    /**\\r\\n     * Gets current index of the slider.\\r\\n     *\\r\\n     * @return {Object}\\r\\n     */\\n\\n  }, {\\n    key: 'index',\\n    get: function get$$1() {\\n      return this._i;\\n    }\\n\\n    /**\\r\\n     * Sets current index a slider.\\r\\n     *\\r\\n     * @return {Object}\\r\\n     */\\n    ,\\n    set: function set$$1(i) {\\n      this._i = toInt(i);\\n    }\\n\\n    /**\\r\\n     * Gets type name of the slider.\\r\\n     *\\r\\n     * @return {String}\\r\\n     */\\n\\n  }, {\\n    key: 'type',\\n    get: function get$$1() {\\n      return this.settings.type;\\n    }\\n\\n    /**\\r\\n     * Gets value of the idle status.\\r\\n     *\\r\\n     * @return {Boolean}\\r\\n     */\\n\\n  }, {\\n    key: 'disabled',\\n    get: function get$$1() {\\n      return this._d;\\n    }\\n\\n    /**\\r\\n     * Sets value of the idle status.\\r\\n     *\\r\\n     * @return {Boolean}\\r\\n     */\\n    ,\\n    set: function set$$1(status) {\\n      this._d = !!status;\\n    }\\n  }]);\\n  return Glide;\\n}();\\n\\nfunction Run (Glide, Components, Events) {\\n  var Run = {\\n    /**\\n     * Initializes autorunning of the glide.\\n     *\\n     * @return {Void}\\n     */\\n    mount: function mount() {\\n      this._o = false;\\n    },\\n\\n\\n    /**\\n     * Makes glides running based on the passed moving schema.\\n     *\\n     * @param {String} move\\n     */\\n    make: function make(move) {\\n      var _this = this;\\n\\n      if (!Glide.disabled) {\\n        Glide.disable();\\n\\n        this.move = move;\\n\\n        Events.emit('run.before', this.move);\\n\\n        this.calculate();\\n\\n        Events.emit('run', this.move);\\n\\n        Components.Transition.after(function () {\\n          if (_this.isStart()) {\\n            Events.emit('run.start', _this.move);\\n          }\\n\\n          if (_this.isEnd()) {\\n            Events.emit('run.end', _this.move);\\n          }\\n\\n          if (_this.isOffset('<') || _this.isOffset('>')) {\\n            _this._o = false;\\n\\n            Events.emit('run.offset', _this.move);\\n          }\\n\\n          Events.emit('run.after', _this.move);\\n\\n          Glide.enable();\\n        });\\n      }\\n    },\\n\\n\\n    /**\\n     * Calculates current index based on defined move.\\n     *\\n     * @return {Void}\\n     */\\n    calculate: function calculate() {\\n      var move = this.move,\\n          length = this.length;\\n      var steps = move.steps,\\n          direction = move.direction;\\n\\n\\n      var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\\n\\n      switch (direction) {\\n        case '>':\\n          if (steps === '>') {\\n            Glide.index = length;\\n          } else if (this.isEnd()) {\\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\\n              this._o = true;\\n\\n              Glide.index = 0;\\n            }\\n          } else if (countableSteps) {\\n            Glide.index += Math.min(length - Glide.index, -toInt(steps));\\n          } else {\\n            Glide.index++;\\n          }\\n          break;\\n\\n        case '<':\\n          if (steps === '<') {\\n            Glide.index = 0;\\n          } else if (this.isStart()) {\\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\\n              this._o = true;\\n\\n              Glide.index = length;\\n            }\\n          } else if (countableSteps) {\\n            Glide.index -= Math.min(Glide.index, toInt(steps));\\n          } else {\\n            Glide.index--;\\n          }\\n          break;\\n\\n        case '=':\\n          Glide.index = steps;\\n          break;\\n\\n        default:\\n          warn('Invalid direction pattern [' + direction + steps + '] has been used');\\n          break;\\n      }\\n    },\\n\\n\\n    /**\\n     * Checks if we are on the first slide.\\n     *\\n     * @return {Boolean}\\n     */\\n    isStart: function isStart() {\\n      return Glide.index === 0;\\n    },\\n\\n\\n    /**\\n     * Checks if we are on the last slide.\\n     *\\n     * @return {Boolean}\\n     */\\n    isEnd: function isEnd() {\\n      return Glide.index === this.length;\\n    },\\n\\n\\n    /**\\n     * Checks if we are making a offset run.\\n     *\\n     * @param {String} direction\\n     * @return {Boolean}\\n     */\\n    isOffset: function isOffset(direction) {\\n      return this._o && this.move.direction === direction;\\n    }\\n  };\\n\\n  define(Run, 'move', {\\n    /**\\n     * Gets value of the move schema.\\n     *\\n     * @returns {Object}\\n     */\\n    get: function get() {\\n      return this._m;\\n    },\\n\\n\\n    /**\\n     * Sets value of the move schema.\\n     *\\n     * @returns {Object}\\n     */\\n    set: function set(value) {\\n      var step = value.substr(1);\\n\\n      this._m = {\\n        direction: value.substr(0, 1),\\n        steps: step ? toInt(step) ? toInt(step) : step : 0\\n      };\\n    }\\n  });\\n\\n  define(Run, 'length', {\\n    /**\\n     * Gets value of the running distance based\\n     * on zero-indexing number of slides.\\n     *\\n     * @return {Number}\\n     */\\n    get: function get() {\\n      var settings = Glide.settings;\\n      var length = Components.Html.slides.length;\\n\\n      // If the `bound` option is acitve, a maximum running distance should be\\n      // reduced by `perView` and `focusAt` settings. Running distance\\n      // should end before creating an empty space after instance.\\n\\n      if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\\n      }\\n\\n      return length - 1;\\n    }\\n  });\\n\\n  define(Run, 'offset', {\\n    /**\\n     * Gets status of the offsetting flag.\\n     *\\n     * @return {Boolean}\\n     */\\n    get: function get() {\\n      return this._o;\\n    }\\n  });\\n\\n  return Run;\\n}\\n\\n/**\\n * Returns a current time.\\n *\\n * @return {Number}\\n */\\nfunction now() {\\n  return new Date().getTime();\\n}\\n\\n/**\\n * Returns a function, that, when invoked, will only be triggered\\n * at most once during a given window of time.\\n *\\n * @param {Function} func\\n * @param {Number} wait\\n * @param {Object=} options\\n * @return {Function}\\n *\\n * @see https://github.com/jashkenas/underscore\\n */\\nfunction throttle(func, wait, options) {\\n  var timeout = void 0,\\n      context = void 0,\\n      args = void 0,\\n      result = void 0;\\n  var previous = 0;\\n  if (!options) options = {};\\n\\n  var later = function later() {\\n    previous = options.leading === false ? 0 : now();\\n    timeout = null;\\n    result = func.apply(context, args);\\n    if (!timeout) context = args = null;\\n  };\\n\\n  var throttled = function throttled() {\\n    var at = now();\\n    if (!previous && options.leading === false) previous = at;\\n    var remaining = wait - (at - previous);\\n    context = this;\\n    args = arguments;\\n    if (remaining <= 0 || remaining > wait) {\\n      if (timeout) {\\n        clearTimeout(timeout);\\n        timeout = null;\\n      }\\n      previous = at;\\n      result = func.apply(context, args);\\n      if (!timeout) context = args = null;\\n    } else if (!timeout && options.trailing !== false) {\\n      timeout = setTimeout(later, remaining);\\n    }\\n    return result;\\n  };\\n\\n  throttled.cancel = function () {\\n    clearTimeout(timeout);\\n    previous = 0;\\n    timeout = context = args = null;\\n  };\\n\\n  return throttled;\\n}\\n\\nvar MARGIN_TYPE = {\\n  ltr: ['marginLeft', 'marginRight'],\\n  rtl: ['marginRight', 'marginLeft']\\n};\\n\\nfunction Gaps (Glide, Components, Events) {\\n  var Gaps = {\\n    /**\\n     * Applies gaps between slides. First and last\\n     * slides do not receive it's edge margins.\\n     *\\n     * @param {HTMLCollection} slides\\n     * @return {Void}\\n     */\\n    apply: function apply(slides) {\\n      for (var i = 0, len = slides.length; i < len; i++) {\\n        var style = slides[i].style;\\n        var direction = Components.Direction.value;\\n\\n        if (i !== 0) {\\n          style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\\n        } else {\\n          style[MARGIN_TYPE[direction][0]] = '';\\n        }\\n\\n        if (i !== slides.length - 1) {\\n          style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\\n        } else {\\n          style[MARGIN_TYPE[direction][1]] = '';\\n        }\\n      }\\n    },\\n\\n\\n    /**\\n     * Removes gaps from the slides.\\n     *\\n     * @param {HTMLCollection} slides\\n     * @returns {Void}\\n    */\\n    remove: function remove(slides) {\\n      for (var i = 0, len = slides.length; i < len; i++) {\\n        var style = slides[i].style;\\n\\n        style.marginLeft = '';\\n        style.marginRight = '';\\n      }\\n    }\\n  };\\n\\n  define(Gaps, 'value', {\\n    /**\\n     * Gets value of the gap.\\n     *\\n     * @returns {Number}\\n     */\\n    get: function get() {\\n      return toInt(Glide.settings.gap);\\n    }\\n  });\\n\\n  define(Gaps, 'grow', {\\n    /**\\n     * Gets additional dimentions value caused by gaps.\\n     * Used to increase width of the slides wrapper.\\n     *\\n     * @returns {Number}\\n     */\\n    get: function get() {\\n      return Gaps.value * (Components.Sizes.length - 1);\\n    }\\n  });\\n\\n  define(Gaps, 'reductor', {\\n    /**\\n     * Gets reduction value caused by gaps.\\n     * Used to subtract width of the slides.\\n     *\\n     * @returns {Number}\\n     */\\n    get: function get() {\\n      var perView = Glide.settings.perView;\\n\\n      return Gaps.value * (perView - 1) / perView;\\n    }\\n  });\\n\\n  /**\\n   * Apply calculated gaps:\\n   * - after building, so slides (including clones) will receive proper margins\\n   * - on updating via API, to recalculate gaps with new options\\n   */\\n  Events.on(['build.after', 'update'], throttle(function () {\\n    Gaps.apply(Components.Html.wrapper.children);\\n  }, 30));\\n\\n  /**\\n   * Remove gaps:\\n   * - on destroying to bring markup to its inital state\\n   */\\n  Events.on('destroy', function () {\\n    Gaps.remove(Components.Html.wrapper.children);\\n  });\\n\\n  return Gaps;\\n}\\n\\n/**\\n * Finds siblings nodes of the passed node.\\n *\\n * @param  {Element} node\\n * @return {Array}\\n */\\nfunction siblings(node) {\\n  if (node && node.parentNode) {\\n    var n = node.parentNode.firstChild;\\n    var matched = [];\\n\\n    for (; n; n = n.nextSibling) {\\n      if (n.nodeType === 1 && n !== node) {\\n        matched.push(n);\\n      }\\n    }\\n\\n    return matched;\\n  }\\n\\n  return [];\\n}\\n\\n/**\\n * Checks if passed node exist and is a valid element.\\n *\\n * @param  {Element} node\\n * @return {Boolean}\\n */\\nfunction exist(node) {\\n  if (node && node instanceof window.HTMLElement) {\\n    return true;\\n  }\\n\\n  return false;\\n}\\n\\nvar TRACK_SELECTOR = '[data-glide-el=\\\"track\\\"]';\\n\\nfunction Html (Glide, Components) {\\n  var Html = {\\n    /**\\n     * Setup slider HTML nodes.\\n     *\\n     * @param {Glide} glide\\n     */\\n    mount: function mount() {\\n      this.root = Glide.selector;\\n      this.track = this.root.querySelector(TRACK_SELECTOR);\\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide);\\n      });\\n    }\\n  };\\n\\n  define(Html, 'root', {\\n    /**\\n     * Gets node of the glide main element.\\n     *\\n     * @return {Object}\\n     */\\n    get: function get() {\\n      return Html._r;\\n    },\\n\\n\\n    /**\\n     * Sets node of the glide main element.\\n     *\\n     * @return {Object}\\n     */\\n    set: function set(r) {\\n      if (isString(r)) {\\n        r = document.querySelector(r);\\n      }\\n\\n      if (exist(r)) {\\n        Html._r = r;\\n      } else {\\n        warn('Root element must be a existing Html node');\\n      }\\n    }\\n  });\\n\\n  define(Html, 'track', {\\n    /**\\n     * Gets node of the glide track with slides.\\n     *\\n     * @return {Object}\\n     */\\n    get: function get() {\\n      return Html._t;\\n    },\\n\\n\\n    /**\\n     * Sets node of the glide track with slides.\\n     *\\n     * @return {Object}\\n     */\\n    set: function set(t) {\\n      if (exist(t)) {\\n        Html._t = t;\\n      } else {\\n        warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\\n      }\\n    }\\n  });\\n\\n  define(Html, 'wrapper', {\\n    /**\\n     * Gets node of the slides wrapper.\\n     *\\n     * @return {Object}\\n     */\\n    get: function get() {\\n      return Html.track.children[0];\\n    }\\n  });\\n\\n  return Html;\\n}\\n\\nfunction Peek (Glide, Components, Events) {\\n  var Peek = {\\n    /**\\n     * Setups how much to peek based on settings.\\n     *\\n     * @return {Void}\\n     */\\n    mount: function mount() {\\n      this.value = Glide.settings.peek;\\n    }\\n  };\\n\\n  define(Peek, 'value', {\\n    /**\\n     * Gets value of the peek.\\n     *\\n     * @returns {Number|Object}\\n     */\\n    get: function get() {\\n      return Peek._v;\\n    },\\n\\n\\n    /**\\n     * Sets value of the peek.\\n     *\\n     * @param {Number|Object} value\\n     * @return {Void}\\n     */\\n    set: function set(value) {\\n      if (isObject(value)) {\\n        value.before = toInt(value.before);\\n        value.after = toInt(value.after);\\n      } else {\\n        value = toInt(value);\\n      }\\n\\n      Peek._v = value;\\n    }\\n  });\\n\\n  define(Peek, 'reductor', {\\n    /**\\n     * Gets reduction value caused by peek.\\n     *\\n     * @returns {Number}\\n     */\\n    get: function get() {\\n      var value = Peek.value;\\n      var perView = Glide.settings.perView;\\n\\n      if (isObject(value)) {\\n        return value.before / perView + value.after / perView;\\n      }\\n\\n      return value * 2 / perView;\\n    }\\n  });\\n\\n  /**\\n   * Recalculate peeking sizes on:\\n   * - when resizing window to update to proper percents\\n   */\\n  Events.on(['resize', 'update'], function () {\\n    Peek.mount();\\n  });\\n\\n  return Peek;\\n}\\n\\nfunction Move (Glide, Components, Events) {\\n  var Move = {\\n    /**\\n     * Constructs move component.\\n     *\\n     * @returns {Void}\\n     */\\n    mount: function mount() {\\n      this._o = 0;\\n    },\\n\\n\\n    /**\\n     * Calculates a movement value based on passed offset and currently active index.\\n     *\\n     * @param  {Number} offset\\n     * @return {Void}\\n     */\\n    make: function make() {\\n      var _this = this;\\n\\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\\n\\n      this.offset = offset;\\n\\n      Events.emit('move', {\\n        movement: this.value\\n      });\\n\\n      Components.Transition.after(function () {\\n        Events.emit('move.after', {\\n          movement: _this.value\\n        });\\n      });\\n    }\\n  };\\n\\n  define(Move, 'offset', {\\n    /**\\n     * Gets an offset value used to modify current translate.\\n     *\\n     * @return {Object}\\n     */\\n    get: function get() {\\n      return Move._o;\\n    },\\n\\n\\n    /**\\n     * Sets an offset value used to modify current translate.\\n     *\\n     * @return {Object}\\n     */\\n    set: function set(value) {\\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\\n    }\\n  });\\n\\n  define(Move, 'translate', {\\n    /**\\n     * Gets a raw movement value.\\n     *\\n     * @return {Number}\\n     */\\n    get: function get() {\\n      return Components.Sizes.slideWidth * Glide.index;\\n    }\\n  });\\n\\n  define(Move, 'value', {\\n    /**\\n     * Gets an actual movement value corrected by offset.\\n     *\\n     * @return {Number}\\n     */\\n    get: function get() {\\n      var offset = this.offset;\\n      var translate = this.translate;\\n\\n      if (Components.Direction.is('rtl')) {\\n        return translate + offset;\\n      }\\n\\n      return translate - offset;\\n    }\\n  });\\n\\n  /**\\n   * Make movement to proper slide on:\\n   * - before build, so glide will start at `startAt` index\\n   * - on each standard run to move to newly calculated index\\n   */\\n  Events.on(['build.before', 'run'], function () {\\n    Move.make();\\n  });\\n\\n  return Move;\\n}\\n\\nfunction Sizes (Glide, Components, Events) {\\n  var Sizes = {\\n    /**\\n     * Setups dimentions of slides.\\n     *\\n     * @return {Void}\\n     */\\n    setupSlides: function setupSlides() {\\n      var width = this.slideWidth + 'px';\\n      var slides = Components.Html.slides;\\n\\n      for (var i = 0; i < slides.length; i++) {\\n        slides[i].style.width = width;\\n      }\\n    },\\n\\n\\n    /**\\n     * Setups dimentions of slides wrapper.\\n     *\\n     * @return {Void}\\n     */\\n    setupWrapper: function setupWrapper(dimention) {\\n      Components.Html.wrapper.style.width = this.wrapperSize + 'px';\\n    },\\n\\n\\n    /**\\n     * Removes applied styles from HTML elements.\\n     *\\n     * @returns {Void}\\n     */\\n    remove: function remove() {\\n      var slides = Components.Html.slides;\\n\\n      for (var i = 0; i < slides.length; i++) {\\n        slides[i].style.width = '';\\n      }\\n\\n      Components.Html.wrapper.style.width = '';\\n    }\\n  };\\n\\n  define(Sizes, 'length', {\\n    /**\\n     * Gets count number of the slides.\\n     *\\n     * @return {Number}\\n     */\\n    get: function get() {\\n      return Components.Html.slides.length;\\n    }\\n  });\\n\\n  define(Sizes, 'width', {\\n    /**\\n     * Gets width value of the glide.\\n     *\\n     * @return {Number}\\n     */\\n    get: function get() {\\n      return Components.Html.root.offsetWidth;\\n    }\\n  });\\n\\n  define(Sizes, 'wrapperSize', {\\n    /**\\n     * Gets size of the slides wrapper.\\n     *\\n     * @return {Number}\\n     */\\n    get: function get() {\\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\\n    }\\n  });\\n\\n  define(Sizes, 'slideWidth', {\\n    /**\\n     * Gets width value of the single slide.\\n     *\\n     * @return {Number}\\n     */\\n    get: function get() {\\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\\n    }\\n  });\\n\\n  /**\\n   * Apply calculated glide's dimensions:\\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\\n   * - when resizing window to recalculate sildes dimensions\\n   * - on updating via API, to calculate dimensions based on new options\\n   */\\n  Events.on(['build.before', 'resize', 'update'], function () {\\n    Sizes.setupSlides();\\n    Sizes.setupWrapper();\\n  });\\n\\n  /**\\n   * Remove calculated glide's dimensions:\\n   * - on destoting to bring markup to its inital state\\n   */\\n  Events.on('destroy', function () {\\n    Sizes.remove();\\n  });\\n\\n  return Sizes;\\n}\\n\\nfunction Build (Glide, Components, Events) {\\n  var Build = {\\n    /**\\n     * Init glide building. Adds classes, sets\\n     * dimensions and setups initial state.\\n     *\\n     * @return {Void}\\n     */\\n    mount: function mount() {\\n      Events.emit('build.before');\\n\\n      this.typeClass();\\n      this.activeClass();\\n\\n      Events.emit('build.after');\\n    },\\n\\n\\n    /**\\n     * Adds `type` class to the glide element.\\n     *\\n     * @return {Void}\\n     */\\n    typeClass: function typeClass() {\\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\\n    },\\n\\n\\n    /**\\n     * Sets active class to current slide.\\n     *\\n     * @return {Void}\\n     */\\n    activeClass: function activeClass() {\\n      var classes = Glide.settings.classes;\\n      var slide = Components.Html.slides[Glide.index];\\n\\n      if (slide) {\\n        slide.classList.add(classes.activeSlide);\\n\\n        siblings(slide).forEach(function (sibling) {\\n          sibling.classList.remove(classes.activeSlide);\\n        });\\n      }\\n    },\\n\\n\\n    /**\\n     * Removes HTML classes applied at building.\\n     *\\n     * @return {Void}\\n     */\\n    removeClasses: function removeClasses() {\\n      var classes = Glide.settings.classes;\\n\\n      Components.Html.root.classList.remove(classes[Glide.settings.type]);\\n\\n      Components.Html.slides.forEach(function (sibling) {\\n        sibling.classList.remove(classes.activeSlide);\\n      });\\n    }\\n  };\\n\\n  /**\\n   * Clear building classes:\\n   * - on destroying to bring HTML to its initial state\\n   * - on updating to remove classes before remounting component\\n   */\\n  Events.on(['destroy', 'update'], function () {\\n    Build.removeClasses();\\n  });\\n\\n  /**\\n   * Remount component:\\n   * - on resizing of the window to calculate new dimentions\\n   * - on updating settings via API\\n   */\\n  Events.on(['resize', 'update'], function () {\\n    Build.mount();\\n  });\\n\\n  /**\\n   * Swap active class of current slide:\\n   * - after each move to the new index\\n   */\\n  Events.on('move.after', function () {\\n    Build.activeClass();\\n  });\\n\\n  return Build;\\n}\\n\\nfunction Clones (Glide, Components, Events) {\\n  var Clones = {\\n    /**\\n     * Create pattern map and collect slides to be cloned.\\n     */\\n    mount: function mount() {\\n      this.items = [];\\n\\n      if (Glide.isType('carousel')) {\\n        this.items = this.collect();\\n      }\\n    },\\n\\n\\n    /**\\n     * Collect clones with pattern.\\n     *\\n     * @return {Void}\\n     */\\n    collect: function collect() {\\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\\n      var slides = Components.Html.slides;\\n      var _Glide$settings = Glide.settings,\\n          perView = _Glide$settings.perView,\\n          classes = _Glide$settings.classes;\\n\\n\\n      var peekIncrementer = +!!Glide.settings.peek;\\n      var part = perView + peekIncrementer;\\n      var start = slides.slice(0, part);\\n      var end = slides.slice(-part);\\n\\n      for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\\n        for (var i = 0; i < start.length; i++) {\\n          var clone = start[i].cloneNode(true);\\n\\n          clone.classList.add(classes.cloneSlide);\\n\\n          items.push(clone);\\n        }\\n\\n        for (var _i = 0; _i < end.length; _i++) {\\n          var _clone = end[_i].cloneNode(true);\\n\\n          _clone.classList.add(classes.cloneSlide);\\n\\n          items.unshift(_clone);\\n        }\\n      }\\n\\n      return items;\\n    },\\n\\n\\n    /**\\n     * Append cloned slides with generated pattern.\\n     *\\n     * @return {Void}\\n     */\\n    append: function append() {\\n      var items = this.items;\\n      var _Components$Html = Components.Html,\\n          wrapper = _Components$Html.wrapper,\\n          slides = _Components$Html.slides;\\n\\n\\n      var half = Math.floor(items.length / 2);\\n      var prepend = items.slice(0, half).reverse();\\n      var append = items.slice(half, items.length);\\n      var width = Components.Sizes.slideWidth + 'px';\\n\\n      for (var i = 0; i < append.length; i++) {\\n        wrapper.appendChild(append[i]);\\n      }\\n\\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\\n        wrapper.insertBefore(prepend[_i2], slides[0]);\\n      }\\n\\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\\n        items[_i3].style.width = width;\\n      }\\n    },\\n\\n\\n    /**\\n     * Remove all cloned slides.\\n     *\\n     * @return {Void}\\n     */\\n    remove: function remove() {\\n      var items = this.items;\\n\\n\\n      for (var i = 0; i < items.length; i++) {\\n        Components.Html.wrapper.removeChild(items[i]);\\n      }\\n    }\\n  };\\n\\n  define(Clones, 'grow', {\\n    /**\\n     * Gets additional dimentions value caused by clones.\\n     *\\n     * @return {Number}\\n     */\\n    get: function get() {\\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\\n    }\\n  });\\n\\n  /**\\n   * Append additional slide's clones:\\n   * - while glide's type is `carousel`\\n   */\\n  Events.on('update', function () {\\n    Clones.remove();\\n    Clones.mount();\\n    Clones.append();\\n  });\\n\\n  /**\\n   * Append additional slide's clones:\\n   * - while glide's type is `carousel`\\n   */\\n  Events.on('build.before', function () {\\n    if (Glide.isType('carousel')) {\\n      Clones.append();\\n    }\\n  });\\n\\n  /**\\n   * Remove clones HTMLElements:\\n   * - on destroying, to bring HTML to its initial state\\n   */\\n  Events.on('destroy', function () {\\n    Clones.remove();\\n  });\\n\\n  return Clones;\\n}\\n\\nvar EventsBinder = function () {\\n  /**\\n   * Construct a EventsBinder instance.\\n   */\\n  function EventsBinder() {\\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n    classCallCheck(this, EventsBinder);\\n\\n    this.listeners = listeners;\\n  }\\n\\n  /**\\n   * Adds events listeners to arrows HTML elements.\\n   *\\n   * @param  {String|Array} events\\n   * @param  {Element|Window|Document} el\\n   * @param  {Function} closure\\n   * @param  {Boolean|Object} capture\\n   * @return {Void}\\n   */\\n\\n\\n  createClass(EventsBinder, [{\\n    key: 'on',\\n    value: function on(events, el, closure) {\\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\\n\\n      if (isString(events)) {\\n        events = [events];\\n      }\\n\\n      for (var i = 0; i < events.length; i++) {\\n        this.listeners[events[i]] = closure;\\n\\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\\n      }\\n    }\\n\\n    /**\\n     * Removes event listeners from arrows HTML elements.\\n     *\\n     * @param  {String|Array} events\\n     * @param  {Element|Window|Document} el\\n     * @param  {Boolean|Object} capture\\n     * @return {Void}\\n     */\\n\\n  }, {\\n    key: 'off',\\n    value: function off(events, el) {\\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n\\n      if (isString(events)) {\\n        events = [events];\\n      }\\n\\n      for (var i = 0; i < events.length; i++) {\\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\\n      }\\n    }\\n\\n    /**\\n     * Destroy collected listeners.\\n     *\\n     * @returns {Void}\\n     */\\n\\n  }, {\\n    key: 'destroy',\\n    value: function destroy() {\\n      delete this.listeners;\\n    }\\n  }]);\\n  return EventsBinder;\\n}();\\n\\nfunction Resize (Glide, Components, Events) {\\n  /**\\n   * Instance of the binder for DOM Events.\\n   *\\n   * @type {EventsBinder}\\n   */\\n  var Binder = new EventsBinder();\\n\\n  var Resize = {\\n    /**\\n     * Initializes window bindings.\\n     */\\n    mount: function mount() {\\n      this.bind();\\n    },\\n\\n\\n    /**\\n     * Binds `rezsize` listener to the window.\\n     * It's a costly event, so we are debouncing it.\\n     *\\n     * @return {Void}\\n     */\\n    bind: function bind() {\\n      Binder.on('resize', window, throttle(function () {\\n        Events.emit('resize');\\n      }, Glide.settings.throttle));\\n    },\\n\\n\\n    /**\\n     * Unbinds listeners from the window.\\n     *\\n     * @return {Void}\\n     */\\n    unbind: function unbind() {\\n      Binder.off('resize', window);\\n    }\\n  };\\n\\n  /**\\n   * Remove bindings from window:\\n   * - on destroying, to remove added EventListener\\n   */\\n  Events.on('destroy', function () {\\n    Resize.unbind();\\n    Binder.destroy();\\n  });\\n\\n  return Resize;\\n}\\n\\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\\nvar FLIPED_MOVEMENTS = {\\n  '>': '<',\\n  '<': '>',\\n  '=': '='\\n};\\n\\nfunction Direction (Glide, Components, Events) {\\n  var Direction = {\\n    /**\\n     * Setups gap value based on settings.\\n     *\\n     * @return {Void}\\n     */\\n    mount: function mount() {\\n      this.value = Glide.settings.direction;\\n    },\\n\\n\\n    /**\\n     * Resolves pattern based on direction value\\n     *\\n     * @param {String} pattern\\n     * @returns {String}\\n     */\\n    resolve: function resolve(pattern) {\\n      var token = pattern.slice(0, 1);\\n\\n      if (this.is('rtl')) {\\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\\n      }\\n\\n      return pattern;\\n    },\\n\\n\\n    /**\\n     * Checks value of direction mode.\\n     *\\n     * @param {String} direction\\n     * @returns {Boolean}\\n     */\\n    is: function is(direction) {\\n      return this.value === direction;\\n    },\\n\\n\\n    /**\\n     * Applies direction class to the root HTML element.\\n     *\\n     * @return {Void}\\n     */\\n    addClass: function addClass() {\\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\\n    },\\n\\n\\n    /**\\n     * Removes direction class from the root HTML element.\\n     *\\n     * @return {Void}\\n     */\\n    removeClass: function removeClass() {\\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\\n    }\\n  };\\n\\n  define(Direction, 'value', {\\n    /**\\n     * Gets value of the direction.\\n     *\\n     * @returns {Number}\\n     */\\n    get: function get() {\\n      return Direction._v;\\n    },\\n\\n\\n    /**\\n     * Sets value of the direction.\\n     *\\n     * @param {String} value\\n     * @return {Void}\\n     */\\n    set: function set(value) {\\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\\n        Direction._v = value;\\n      } else {\\n        warn('Direction value must be `ltr` or `rtl`');\\n      }\\n    }\\n  });\\n\\n  /**\\n   * Clear direction class:\\n   * - on destroy to bring HTML to its initial state\\n   * - on update to remove class before reappling bellow\\n   */\\n  Events.on(['destroy', 'update'], function () {\\n    Direction.removeClass();\\n  });\\n\\n  /**\\n   * Remount component:\\n   * - on update to reflect changes in direction value\\n   */\\n  Events.on('update', function () {\\n    Direction.mount();\\n  });\\n\\n  /**\\n   * Apply direction class:\\n   * - before building to apply class for the first time\\n   * - on updating to reapply direction class that may changed\\n   */\\n  Events.on(['build.before', 'update'], function () {\\n    Direction.addClass();\\n  });\\n\\n  return Direction;\\n}\\n\\n/**\\n * Reflects value of glide movement.\\n *\\n * @param  {Object} Glide\\n * @param  {Object} Components\\n * @return {Object}\\n */\\nfunction Rtl (Glide, Components) {\\n  return {\\n    /**\\n     * Negates the passed translate if glide is in RTL option.\\n     *\\n     * @param  {Number} translate\\n     * @return {Number}\\n     */\\n    modify: function modify(translate) {\\n      if (Components.Direction.is('rtl')) {\\n        return -translate;\\n      }\\n\\n      return translate;\\n    }\\n  };\\n}\\n\\n/**\\n * Updates glide movement with a `gap` settings.\\n *\\n * @param  {Object} Glide\\n * @param  {Object} Components\\n * @return {Object}\\n */\\nfunction Gap (Glide, Components) {\\n  return {\\n    /**\\n     * Modifies passed translate value with number in the `gap` settings.\\n     *\\n     * @param  {Number} translate\\n     * @return {Number}\\n     */\\n    modify: function modify(translate) {\\n      return translate + Components.Gaps.value * Glide.index;\\n    }\\n  };\\n}\\n\\n/**\\n * Updates glide movement with width of additional clones width.\\n *\\n * @param  {Object} Glide\\n * @param  {Object} Components\\n * @return {Object}\\n */\\nfunction Grow (Glide, Components) {\\n  return {\\n    /**\\n     * Adds to the passed translate width of the half of clones.\\n     *\\n     * @param  {Number} translate\\n     * @return {Number}\\n     */\\n    modify: function modify(translate) {\\n      return translate + Components.Clones.grow / 2;\\n    }\\n  };\\n}\\n\\n/**\\n * Updates glide movement with a `peek` settings.\\n *\\n * @param  {Object} Glide\\n * @param  {Object} Components\\n * @return {Object}\\n */\\nfunction Peeking (Glide, Components) {\\n  return {\\n    /**\\n     * Modifies passed translate value with a `peek` setting.\\n     *\\n     * @param  {Number} translate\\n     * @return {Number}\\n     */\\n    modify: function modify(translate) {\\n      if (Glide.settings.focusAt >= 0) {\\n        var peek = Components.Peek.value;\\n\\n        if (isObject(peek)) {\\n          return translate - peek.before;\\n        }\\n\\n        return translate - peek;\\n      }\\n\\n      return translate;\\n    }\\n  };\\n}\\n\\n/**\\n * Updates glide movement with a `focusAt` settings.\\n *\\n * @param  {Object} Glide\\n * @param  {Object} Components\\n * @return {Object}\\n */\\nfunction Focusing (Glide, Components) {\\n  return {\\n    /**\\n     * Modifies passed translate value with index in the `focusAt` setting.\\n     *\\n     * @param  {Number} translate\\n     * @return {Number}\\n     */\\n    modify: function modify(translate) {\\n      var gap = Components.Gaps.value;\\n      var width = Components.Sizes.width;\\n      var focusAt = Glide.settings.focusAt;\\n      var slideWidth = Components.Sizes.slideWidth;\\n\\n      if (focusAt === 'center') {\\n        return translate - (width / 2 - slideWidth / 2);\\n      }\\n\\n      return translate - slideWidth * focusAt - gap * focusAt;\\n    }\\n  };\\n}\\n\\n/**\\n * Applies diffrent transformers on translate value.\\n *\\n * @param  {Object} Glide\\n * @param  {Object} Components\\n * @return {Object}\\n */\\nfunction mutator (Glide, Components, Events) {\\n  /**\\n   * Merge instance transformers with collection of default transformers.\\n   * It's important that the Rtl component be last on the list,\\n   * so it reflects all previous transformations.\\n   *\\n   * @type {Array}\\n   */\\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\\n\\n  return {\\n    /**\\n     * Piplines translate value with registered transformers.\\n     *\\n     * @param  {Number} translate\\n     * @return {Number}\\n     */\\n    mutate: function mutate(translate) {\\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\\n        var transformer = TRANSFORMERS[i];\\n\\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\\n          translate = transformer(Glide, Components, Events).modify(translate);\\n        } else {\\n          warn('Transformer should be a function that returns an object with `modify()` method');\\n        }\\n      }\\n\\n      return translate;\\n    }\\n  };\\n}\\n\\nfunction Translate (Glide, Components, Events) {\\n  var Translate = {\\n    /**\\n     * Sets value of translate on HTML element.\\n     *\\n     * @param {Number} value\\n     * @return {Void}\\n     */\\n    set: function set(value) {\\n      var transform = mutator(Glide, Components).mutate(value);\\n\\n      Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\\n    },\\n\\n\\n    /**\\n     * Removes value of translate from HTML element.\\n     *\\n     * @return {Void}\\n     */\\n    remove: function remove() {\\n      Components.Html.wrapper.style.transform = '';\\n    }\\n  };\\n\\n  /**\\n   * Set new translate value:\\n   * - on move to reflect index change\\n   * - on updating via API to reflect possible changes in options\\n   */\\n  Events.on('move', function (context) {\\n    var gap = Components.Gaps.value;\\n    var length = Components.Sizes.length;\\n    var width = Components.Sizes.slideWidth;\\n\\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\\n      Components.Transition.after(function () {\\n        Events.emit('translate.jump');\\n\\n        Translate.set(width * (length - 1));\\n      });\\n\\n      return Translate.set(-width - gap * length);\\n    }\\n\\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\\n      Components.Transition.after(function () {\\n        Events.emit('translate.jump');\\n\\n        Translate.set(0);\\n      });\\n\\n      return Translate.set(width * length + gap * length);\\n    }\\n\\n    return Translate.set(context.movement);\\n  });\\n\\n  /**\\n   * Remove translate:\\n   * - on destroying to bring markup to its inital state\\n   */\\n  Events.on('destroy', function () {\\n    Translate.remove();\\n  });\\n\\n  return Translate;\\n}\\n\\nfunction Transition (Glide, Components, Events) {\\n  /**\\n   * Holds inactivity status of transition.\\n   * When true transition is not applied.\\n   *\\n   * @type {Boolean}\\n   */\\n  var disabled = false;\\n\\n  var Transition = {\\n    /**\\n     * Composes string of the CSS transition.\\n     *\\n     * @param {String} property\\n     * @return {String}\\n     */\\n    compose: function compose(property) {\\n      var settings = Glide.settings;\\n\\n      if (!disabled) {\\n        return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\\n      }\\n\\n      return property + ' 0ms ' + settings.animationTimingFunc;\\n    },\\n\\n\\n    /**\\n     * Sets value of transition on HTML element.\\n     *\\n     * @param {String=} property\\n     * @return {Void}\\n     */\\n    set: function set() {\\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\\n\\n      Components.Html.wrapper.style.transition = this.compose(property);\\n    },\\n\\n\\n    /**\\n     * Removes value of transition from HTML element.\\n     *\\n     * @return {Void}\\n     */\\n    remove: function remove() {\\n      Components.Html.wrapper.style.transition = '';\\n    },\\n\\n\\n    /**\\n     * Runs callback after animation.\\n     *\\n     * @param  {Function} callback\\n     * @return {Void}\\n     */\\n    after: function after(callback) {\\n      setTimeout(function () {\\n        callback();\\n      }, this.duration);\\n    },\\n\\n\\n    /**\\n     * Enable transition.\\n     *\\n     * @return {Void}\\n     */\\n    enable: function enable() {\\n      disabled = false;\\n\\n      this.set();\\n    },\\n\\n\\n    /**\\n     * Disable transition.\\n     *\\n     * @return {Void}\\n     */\\n    disable: function disable() {\\n      disabled = true;\\n\\n      this.set();\\n    }\\n  };\\n\\n  define(Transition, 'duration', {\\n    /**\\n     * Gets duration of the transition based\\n     * on currently running animation type.\\n     *\\n     * @return {Number}\\n     */\\n    get: function get() {\\n      var settings = Glide.settings;\\n\\n      if (Glide.isType('slider') && Components.Run.offset) {\\n        return settings.rewindDuration;\\n      }\\n\\n      return settings.animationDuration;\\n    }\\n  });\\n\\n  /**\\n   * Set transition `style` value:\\n   * - on each moving, because it may be cleared by offset move\\n   */\\n  Events.on('move', function () {\\n    Transition.set();\\n  });\\n\\n  /**\\n   * Disable transition:\\n   * - before initial build to avoid transitioning from `0` to `startAt` index\\n   * - while resizing window and recalculating dimentions\\n   * - on jumping from offset transition at start and end edges in `carousel` type\\n   */\\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\\n    Transition.disable();\\n  });\\n\\n  /**\\n   * Enable transition:\\n   * - on each running, because it may be disabled by offset move\\n   */\\n  Events.on('run', function () {\\n    Transition.enable();\\n  });\\n\\n  /**\\n   * Remove transition:\\n   * - on destroying to bring markup to its inital state\\n   */\\n  Events.on('destroy', function () {\\n    Transition.remove();\\n  });\\n\\n  return Transition;\\n}\\n\\n/**\\n * Test via a getter in the options object to see\\n * if the passive property is accessed.\\n *\\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\\n */\\n\\nvar supportsPassive = false;\\n\\ntry {\\n  var opts = Object.defineProperty({}, 'passive', {\\n    get: function get() {\\n      supportsPassive = true;\\n    }\\n  });\\n\\n  window.addEventListener('testPassive', null, opts);\\n  window.removeEventListener('testPassive', null, opts);\\n} catch (e) {}\\n\\nvar supportsPassive$1 = supportsPassive;\\n\\nvar START_EVENTS = ['touchstart', 'mousedown'];\\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\\n\\nfunction Swipe (Glide, Components, Events) {\\n  /**\\n   * Instance of the binder for DOM Events.\\n   *\\n   * @type {EventsBinder}\\n   */\\n  var Binder = new EventsBinder();\\n\\n  var swipeSin = 0;\\n  var swipeStartX = 0;\\n  var swipeStartY = 0;\\n  var disabled = false;\\n  var capture = supportsPassive$1 ? { passive: true } : false;\\n\\n  var Swipe = {\\n    /**\\n     * Initializes swipe bindings.\\n     *\\n     * @return {Void}\\n     */\\n    mount: function mount() {\\n      this.bindSwipeStart();\\n    },\\n\\n\\n    /**\\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\\n     *\\n     * @param {Object} event\\n     * @return {Void}\\n     */\\n    start: function start(event) {\\n      if (!disabled && !Glide.disabled) {\\n        this.disable();\\n\\n        var swipe = this.touches(event);\\n\\n        swipeSin = null;\\n        swipeStartX = toInt(swipe.pageX);\\n        swipeStartY = toInt(swipe.pageY);\\n\\n        this.bindSwipeMove();\\n        this.bindSwipeEnd();\\n\\n        Events.emit('swipe.start');\\n      }\\n    },\\n\\n\\n    /**\\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\\n     *\\n     * @param {Object} event\\n     */\\n    move: function move(event) {\\n      if (!Glide.disabled) {\\n        var _Glide$settings = Glide.settings,\\n            touchAngle = _Glide$settings.touchAngle,\\n            touchRatio = _Glide$settings.touchRatio,\\n            classes = _Glide$settings.classes;\\n\\n\\n        var swipe = this.touches(event);\\n\\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\\n        var powEX = Math.abs(subExSx << 2);\\n        var powEY = Math.abs(subEySy << 2);\\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\\n        var swipeCathetus = Math.sqrt(powEY);\\n\\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\\n\\n        if (swipeSin * 180 / Math.PI < touchAngle) {\\n          event.stopPropagation();\\n\\n          Components.Move.make(subExSx * toFloat(touchRatio));\\n\\n          Components.Html.root.classList.add(classes.dragging);\\n\\n          Events.emit('swipe.move');\\n        } else {\\n          return false;\\n        }\\n      }\\n    },\\n\\n\\n    /**\\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\\n     *\\n     * @param {Object} event\\n     * @return {Void}\\n     */\\n    end: function end(event) {\\n      if (!Glide.disabled) {\\n        var settings = Glide.settings;\\n\\n        var swipe = this.touches(event);\\n        var threshold = this.threshold(event);\\n\\n        var swipeDistance = swipe.pageX - swipeStartX;\\n        var swipeDeg = swipeSin * 180 / Math.PI;\\n        var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\\n\\n        this.enable();\\n\\n        if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\\n          // While swipe is positive and greater than threshold move backward.\\n          if (settings.perTouch) {\\n            steps = Math.min(steps, toInt(settings.perTouch));\\n          }\\n\\n          if (Components.Direction.is('rtl')) {\\n            steps = -steps;\\n          }\\n\\n          Components.Run.make(Components.Direction.resolve('<' + steps));\\n        } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\\n          // While swipe is negative and lower than negative threshold move forward.\\n          if (settings.perTouch) {\\n            steps = Math.max(steps, -toInt(settings.perTouch));\\n          }\\n\\n          if (Components.Direction.is('rtl')) {\\n            steps = -steps;\\n          }\\n\\n          Components.Run.make(Components.Direction.resolve('>' + steps));\\n        } else {\\n          // While swipe don't reach distance apply previous transform.\\n          Components.Move.make();\\n        }\\n\\n        Components.Html.root.classList.remove(settings.classes.dragging);\\n\\n        this.unbindSwipeMove();\\n        this.unbindSwipeEnd();\\n\\n        Events.emit('swipe.end');\\n      }\\n    },\\n\\n\\n    /**\\n     * Binds swipe's starting event.\\n     *\\n     * @return {Void}\\n     */\\n    bindSwipeStart: function bindSwipeStart() {\\n      var _this = this;\\n\\n      var settings = Glide.settings;\\n\\n      if (settings.swipeThreshold) {\\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\\n          _this.start(event);\\n        }, capture);\\n      }\\n\\n      if (settings.dragThreshold) {\\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\\n          _this.start(event);\\n        }, capture);\\n      }\\n    },\\n\\n\\n    /**\\n     * Unbinds swipe's starting event.\\n     *\\n     * @return {Void}\\n     */\\n    unbindSwipeStart: function unbindSwipeStart() {\\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\\n    },\\n\\n\\n    /**\\n     * Binds swipe's moving event.\\n     *\\n     * @return {Void}\\n     */\\n    bindSwipeMove: function bindSwipeMove() {\\n      var _this2 = this;\\n\\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\\n        _this2.move(event);\\n      }, Glide.settings.throttle), capture);\\n    },\\n\\n\\n    /**\\n     * Unbinds swipe's moving event.\\n     *\\n     * @return {Void}\\n     */\\n    unbindSwipeMove: function unbindSwipeMove() {\\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\\n    },\\n\\n\\n    /**\\n     * Binds swipe's ending event.\\n     *\\n     * @return {Void}\\n     */\\n    bindSwipeEnd: function bindSwipeEnd() {\\n      var _this3 = this;\\n\\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\\n        _this3.end(event);\\n      });\\n    },\\n\\n\\n    /**\\n     * Unbinds swipe's ending event.\\n     *\\n     * @return {Void}\\n     */\\n    unbindSwipeEnd: function unbindSwipeEnd() {\\n      Binder.off(END_EVENTS, Components.Html.wrapper);\\n    },\\n\\n\\n    /**\\n     * Normalizes event touches points accorting to different types.\\n     *\\n     * @param {Object} event\\n     */\\n    touches: function touches(event) {\\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\\n        return event;\\n      }\\n\\n      return event.touches[0] || event.changedTouches[0];\\n    },\\n\\n\\n    /**\\n     * Gets value of minimum swipe distance settings based on event type.\\n     *\\n     * @return {Number}\\n     */\\n    threshold: function threshold(event) {\\n      var settings = Glide.settings;\\n\\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\\n        return settings.dragThreshold;\\n      }\\n\\n      return settings.swipeThreshold;\\n    },\\n\\n\\n    /**\\n     * Enables swipe event.\\n     *\\n     * @return {self}\\n     */\\n    enable: function enable() {\\n      disabled = false;\\n\\n      Components.Transition.enable();\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Disables swipe event.\\n     *\\n     * @return {self}\\n     */\\n    disable: function disable() {\\n      disabled = true;\\n\\n      Components.Transition.disable();\\n\\n      return this;\\n    }\\n  };\\n\\n  /**\\n   * Add component class:\\n   * - after initial building\\n   */\\n  Events.on('build.after', function () {\\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\\n  });\\n\\n  /**\\n   * Remove swiping bindings:\\n   * - on destroying, to remove added EventListeners\\n   */\\n  Events.on('destroy', function () {\\n    Swipe.unbindSwipeStart();\\n    Swipe.unbindSwipeMove();\\n    Swipe.unbindSwipeEnd();\\n    Binder.destroy();\\n  });\\n\\n  return Swipe;\\n}\\n\\nfunction Images (Glide, Components, Events) {\\n  /**\\n   * Instance of the binder for DOM Events.\\n   *\\n   * @type {EventsBinder}\\n   */\\n  var Binder = new EventsBinder();\\n\\n  var Images = {\\n    /**\\n     * Binds listener to glide wrapper.\\n     *\\n     * @return {Void}\\n     */\\n    mount: function mount() {\\n      this.bind();\\n    },\\n\\n\\n    /**\\n     * Binds `dragstart` event on wrapper to prevent dragging images.\\n     *\\n     * @return {Void}\\n     */\\n    bind: function bind() {\\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\\n    },\\n\\n\\n    /**\\n     * Unbinds `dragstart` event on wrapper.\\n     *\\n     * @return {Void}\\n     */\\n    unbind: function unbind() {\\n      Binder.off('dragstart', Components.Html.wrapper);\\n    },\\n\\n\\n    /**\\n     * Event handler. Prevents dragging.\\n     *\\n     * @return {Void}\\n     */\\n    dragstart: function dragstart(event) {\\n      event.preventDefault();\\n    }\\n  };\\n\\n  /**\\n   * Remove bindings from images:\\n   * - on destroying, to remove added EventListeners\\n   */\\n  Events.on('destroy', function () {\\n    Images.unbind();\\n    Binder.destroy();\\n  });\\n\\n  return Images;\\n}\\n\\nfunction Anchors (Glide, Components, Events) {\\n  /**\\n   * Instance of the binder for DOM Events.\\n   *\\n   * @type {EventsBinder}\\n   */\\n  var Binder = new EventsBinder();\\n\\n  /**\\n   * Holds detaching status of anchors.\\n   * Prevents detaching of already detached anchors.\\n   *\\n   * @private\\n   * @type {Boolean}\\n   */\\n  var detached = false;\\n\\n  /**\\n   * Holds preventing status of anchors.\\n   * If `true` redirection after click will be disabled.\\n   *\\n   * @private\\n   * @type {Boolean}\\n   */\\n  var prevented = false;\\n\\n  var Anchors = {\\n    /**\\n     * Setups a initial state of anchors component.\\n     *\\n     * @returns {Void}\\n     */\\n    mount: function mount() {\\n      /**\\n       * Holds collection of anchors elements.\\n       *\\n       * @private\\n       * @type {HTMLCollection}\\n       */\\n      this._a = Components.Html.wrapper.querySelectorAll('a');\\n\\n      this.bind();\\n    },\\n\\n\\n    /**\\n     * Binds events to anchors inside a track.\\n     *\\n     * @return {Void}\\n     */\\n    bind: function bind() {\\n      Binder.on('click', Components.Html.wrapper, this.click);\\n    },\\n\\n\\n    /**\\n     * Unbinds events attached to anchors inside a track.\\n     *\\n     * @return {Void}\\n     */\\n    unbind: function unbind() {\\n      Binder.off('click', Components.Html.wrapper);\\n    },\\n\\n\\n    /**\\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\\n     *\\n     * @param  {Object} event\\n     * @return {Void}\\n     */\\n    click: function click(event) {\\n      if (prevented) {\\n        event.stopPropagation();\\n        event.preventDefault();\\n      }\\n    },\\n\\n\\n    /**\\n     * Detaches anchors click event inside glide.\\n     *\\n     * @return {self}\\n     */\\n    detach: function detach() {\\n      prevented = true;\\n\\n      if (!detached) {\\n        for (var i = 0; i < this.items.length; i++) {\\n          this.items[i].draggable = false;\\n\\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\\n\\n          this.items[i].removeAttribute('href');\\n        }\\n\\n        detached = true;\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Attaches anchors click events inside glide.\\n     *\\n     * @return {self}\\n     */\\n    attach: function attach() {\\n      prevented = false;\\n\\n      if (detached) {\\n        for (var i = 0; i < this.items.length; i++) {\\n          this.items[i].draggable = true;\\n\\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\\n        }\\n\\n        detached = false;\\n      }\\n\\n      return this;\\n    }\\n  };\\n\\n  define(Anchors, 'items', {\\n    /**\\n     * Gets collection of the arrows HTML elements.\\n     *\\n     * @return {HTMLElement[]}\\n     */\\n    get: function get() {\\n      return Anchors._a;\\n    }\\n  });\\n\\n  /**\\n   * Detach anchors inside slides:\\n   * - on swiping, so they won't redirect to its `href` attributes\\n   */\\n  Events.on('swipe.move', function () {\\n    Anchors.detach();\\n  });\\n\\n  /**\\n   * Attach anchors inside slides:\\n   * - after swiping and transitions ends, so they can redirect after click again\\n   */\\n  Events.on('swipe.end', function () {\\n    Components.Transition.after(function () {\\n      Anchors.attach();\\n    });\\n  });\\n\\n  /**\\n   * Unbind anchors inside slides:\\n   * - on destroying, to bring anchors to its initial state\\n   */\\n  Events.on('destroy', function () {\\n    Anchors.attach();\\n    Anchors.unbind();\\n    Binder.destroy();\\n  });\\n\\n  return Anchors;\\n}\\n\\nvar NAV_SELECTOR = '[data-glide-el=\\\"controls[nav]\\\"]';\\nvar CONTROLS_SELECTOR = '[data-glide-el^=\\\"controls\\\"]';\\n\\nfunction Controls (Glide, Components, Events) {\\n  /**\\n   * Instance of the binder for DOM Events.\\n   *\\n   * @type {EventsBinder}\\n   */\\n  var Binder = new EventsBinder();\\n\\n  var capture = supportsPassive$1 ? { passive: true } : false;\\n\\n  var Controls = {\\n    /**\\n     * Inits arrows. Binds events listeners\\n     * to the arrows HTML elements.\\n     *\\n     * @return {Void}\\n     */\\n    mount: function mount() {\\n      /**\\n       * Collection of navigation HTML elements.\\n       *\\n       * @private\\n       * @type {HTMLCollection}\\n       */\\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\\n\\n      /**\\n       * Collection of controls HTML elements.\\n       *\\n       * @private\\n       * @type {HTMLCollection}\\n       */\\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\\n\\n      this.addBindings();\\n    },\\n\\n\\n    /**\\n     * Sets active class to current slide.\\n     *\\n     * @return {Void}\\n     */\\n    setActive: function setActive() {\\n      for (var i = 0; i < this._n.length; i++) {\\n        this.addClass(this._n[i].children);\\n      }\\n    },\\n\\n\\n    /**\\n     * Removes active class to current slide.\\n     *\\n     * @return {Void}\\n     */\\n    removeActive: function removeActive() {\\n      for (var i = 0; i < this._n.length; i++) {\\n        this.removeClass(this._n[i].children);\\n      }\\n    },\\n\\n\\n    /**\\n     * Toggles active class on items inside navigation.\\n     *\\n     * @param  {HTMLElement} controls\\n     * @return {Void}\\n     */\\n    addClass: function addClass(controls) {\\n      var settings = Glide.settings;\\n      var item = controls[Glide.index];\\n\\n      if (item) {\\n        item.classList.add(settings.classes.activeNav);\\n\\n        siblings(item).forEach(function (sibling) {\\n          sibling.classList.remove(settings.classes.activeNav);\\n        });\\n      }\\n    },\\n\\n\\n    /**\\n     * Removes active class from active control.\\n     *\\n     * @param  {HTMLElement} controls\\n     * @return {Void}\\n     */\\n    removeClass: function removeClass(controls) {\\n      var item = controls[Glide.index];\\n\\n      if (item) {\\n        item.classList.remove(Glide.settings.classes.activeNav);\\n      }\\n    },\\n\\n\\n    /**\\n     * Adds handles to the each group of controls.\\n     *\\n     * @return {Void}\\n     */\\n    addBindings: function addBindings() {\\n      for (var i = 0; i < this._c.length; i++) {\\n        this.bind(this._c[i].children);\\n      }\\n    },\\n\\n\\n    /**\\n     * Removes handles from the each group of controls.\\n     *\\n     * @return {Void}\\n     */\\n    removeBindings: function removeBindings() {\\n      for (var i = 0; i < this._c.length; i++) {\\n        this.unbind(this._c[i].children);\\n      }\\n    },\\n\\n\\n    /**\\n     * Binds events to arrows HTML elements.\\n     *\\n     * @param {HTMLCollection} elements\\n     * @return {Void}\\n     */\\n    bind: function bind(elements) {\\n      for (var i = 0; i < elements.length; i++) {\\n        Binder.on('click', elements[i], this.click);\\n        Binder.on('touchstart', elements[i], this.click, capture);\\n      }\\n    },\\n\\n\\n    /**\\n     * Unbinds events binded to the arrows HTML elements.\\n     *\\n     * @param {HTMLCollection} elements\\n     * @return {Void}\\n     */\\n    unbind: function unbind(elements) {\\n      for (var i = 0; i < elements.length; i++) {\\n        Binder.off(['click', 'touchstart'], elements[i]);\\n      }\\n    },\\n\\n\\n    /**\\n     * Handles `click` event on the arrows HTML elements.\\n     * Moves slider in driection precised in\\n     * `data-glide-dir` attribute.\\n     *\\n     * @param {Object} event\\n     * @return {Void}\\n     */\\n    click: function click(event) {\\n      event.preventDefault();\\n\\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\\n    }\\n  };\\n\\n  define(Controls, 'items', {\\n    /**\\n     * Gets collection of the controls HTML elements.\\n     *\\n     * @return {HTMLElement[]}\\n     */\\n    get: function get() {\\n      return Controls._c;\\n    }\\n  });\\n\\n  /**\\n   * Swap active class of current navigation item:\\n   * - after mounting to set it to initial index\\n   * - after each move to the new index\\n   */\\n  Events.on(['mount.after', 'move.after'], function () {\\n    Controls.setActive();\\n  });\\n\\n  /**\\n   * Remove bindings and HTML Classes:\\n   * - on destroying, to bring markup to its initial state\\n   */\\n  Events.on('destroy', function () {\\n    Controls.removeBindings();\\n    Controls.removeActive();\\n    Binder.destroy();\\n  });\\n\\n  return Controls;\\n}\\n\\nfunction Keyboard (Glide, Components, Events) {\\n  /**\\n   * Instance of the binder for DOM Events.\\n   *\\n   * @type {EventsBinder}\\n   */\\n  var Binder = new EventsBinder();\\n\\n  var Keyboard = {\\n    /**\\n     * Binds keyboard events on component mount.\\n     *\\n     * @return {Void}\\n     */\\n    mount: function mount() {\\n      if (Glide.settings.keyboard) {\\n        this.bind();\\n      }\\n    },\\n\\n\\n    /**\\n     * Adds keyboard press events.\\n     *\\n     * @return {Void}\\n     */\\n    bind: function bind() {\\n      Binder.on('keyup', document, this.press);\\n    },\\n\\n\\n    /**\\n     * Removes keyboard press events.\\n     *\\n     * @return {Void}\\n     */\\n    unbind: function unbind() {\\n      Binder.off('keyup', document);\\n    },\\n\\n\\n    /**\\n     * Handles keyboard's arrows press and moving glide foward and backward.\\n     *\\n     * @param  {Object} event\\n     * @return {Void}\\n     */\\n    press: function press(event) {\\n      if (event.keyCode === 39) {\\n        Components.Run.make(Components.Direction.resolve('>'));\\n      }\\n\\n      if (event.keyCode === 37) {\\n        Components.Run.make(Components.Direction.resolve('<'));\\n      }\\n    }\\n  };\\n\\n  /**\\n   * Remove bindings from keyboard:\\n   * - on destroying to remove added events\\n   * - on updating to remove events before remounting\\n   */\\n  Events.on(['destroy', 'update'], function () {\\n    Keyboard.unbind();\\n  });\\n\\n  /**\\n   * Remount component\\n   * - on updating to reflect potential changes in settings\\n   */\\n  Events.on('update', function () {\\n    Keyboard.mount();\\n  });\\n\\n  /**\\n   * Destroy binder:\\n   * - on destroying to remove listeners\\n   */\\n  Events.on('destroy', function () {\\n    Binder.destroy();\\n  });\\n\\n  return Keyboard;\\n}\\n\\nfunction Autoplay (Glide, Components, Events) {\\n  /**\\n   * Instance of the binder for DOM Events.\\n   *\\n   * @type {EventsBinder}\\n   */\\n  var Binder = new EventsBinder();\\n\\n  var Autoplay = {\\n    /**\\n     * Initializes autoplaying and events.\\n     *\\n     * @return {Void}\\n     */\\n    mount: function mount() {\\n      this.start();\\n\\n      if (Glide.settings.hoverpause) {\\n        this.bind();\\n      }\\n    },\\n\\n\\n    /**\\n     * Starts autoplaying in configured interval.\\n     *\\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\\n     * @return {Void}\\n     */\\n    start: function start() {\\n      var _this = this;\\n\\n      if (Glide.settings.autoplay) {\\n        if (isUndefined(this._i)) {\\n          this._i = setInterval(function () {\\n            _this.stop();\\n\\n            Components.Run.make('>');\\n\\n            _this.start();\\n          }, this.time);\\n        }\\n      }\\n    },\\n\\n\\n    /**\\n     * Stops autorunning of the glide.\\n     *\\n     * @return {Void}\\n     */\\n    stop: function stop() {\\n      this._i = clearInterval(this._i);\\n    },\\n\\n\\n    /**\\n     * Stops autoplaying while mouse is over glide's area.\\n     *\\n     * @return {Void}\\n     */\\n    bind: function bind() {\\n      var _this2 = this;\\n\\n      Binder.on('mouseover', Components.Html.root, function () {\\n        _this2.stop();\\n      });\\n\\n      Binder.on('mouseout', Components.Html.root, function () {\\n        _this2.start();\\n      });\\n    },\\n\\n\\n    /**\\n     * Unbind mouseover events.\\n     *\\n     * @returns {Void}\\n     */\\n    unbind: function unbind() {\\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\\n    }\\n  };\\n\\n  define(Autoplay, 'time', {\\n    /**\\n     * Gets time period value for the autoplay interval. Prioritizes\\n     * times in `data-glide-autoplay` attrubutes over options.\\n     *\\n     * @return {Number}\\n     */\\n    get: function get() {\\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\\n\\n      if (autoplay) {\\n        return toInt(autoplay);\\n      }\\n\\n      return toInt(Glide.settings.autoplay);\\n    }\\n  });\\n\\n  /**\\n   * Stop autoplaying and unbind events:\\n   * - on destroying, to clear defined interval\\n   * - on updating via API to reset interval that may changed\\n   */\\n  Events.on(['destroy', 'update'], function () {\\n    Autoplay.unbind();\\n  });\\n\\n  /**\\n   * Stop autoplaying:\\n   * - before each run, to restart autoplaying\\n   * - on pausing via API\\n   * - on destroying, to clear defined interval\\n   * - while starting a swipe\\n   * - on updating via API to reset interval that may changed\\n   */\\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\\n    Autoplay.stop();\\n  });\\n\\n  /**\\n   * Start autoplaying:\\n   * - after each run, to restart autoplaying\\n   * - on playing via API\\n   * - while ending a swipe\\n   */\\n  Events.on(['run.after', 'play', 'swipe.end'], function () {\\n    Autoplay.start();\\n  });\\n\\n  /**\\n   * Remount autoplaying:\\n   * - on updating via API to reset interval that may changed\\n   */\\n  Events.on('update', function () {\\n    Autoplay.mount();\\n  });\\n\\n  /**\\n   * Destroy a binder:\\n   * - on destroying glide instance to clearup listeners\\n   */\\n  Events.on('destroy', function () {\\n    Binder.destroy();\\n  });\\n\\n  return Autoplay;\\n}\\n\\n/**\\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\\n *\\n * @param {Object} points\\n * @returns {Object}\\n */\\nfunction sortBreakpoints(points) {\\n  if (isObject(points)) {\\n    return sortKeys(points);\\n  } else {\\n    warn('Breakpoints option must be an object');\\n  }\\n\\n  return {};\\n}\\n\\nfunction Breakpoints (Glide, Components, Events) {\\n  /**\\n   * Instance of the binder for DOM Events.\\n   *\\n   * @type {EventsBinder}\\n   */\\n  var Binder = new EventsBinder();\\n\\n  /**\\n   * Holds reference to settings.\\n   *\\n   * @type {Object}\\n   */\\n  var settings = Glide.settings;\\n\\n  /**\\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\\n   * from smaller to larger. It is required in order to proper\\n   * matching currently active breakpoint settings.\\n   *\\n   * @type {Object}\\n   */\\n  var points = sortBreakpoints(settings.breakpoints);\\n\\n  /**\\n   * Cache initial settings before overwritting.\\n   *\\n   * @type {Object}\\n   */\\n  var defaults = _extends({}, settings);\\n\\n  var Breakpoints = {\\n    /**\\n     * Matches settings for currectly matching media breakpoint.\\n     *\\n     * @param {Object} points\\n     * @returns {Object}\\n     */\\n    match: function match(points) {\\n      if (typeof window.matchMedia !== 'undefined') {\\n        for (var point in points) {\\n          if (points.hasOwnProperty(point)) {\\n            if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\\n              return points[point];\\n            }\\n          }\\n        }\\n      }\\n\\n      return defaults;\\n    }\\n  };\\n\\n  /**\\n   * Overwrite instance settings with currently matching breakpoint settings.\\n   * This happens right after component initialization.\\n   */\\n  _extends(settings, Breakpoints.match(points));\\n\\n  /**\\n   * Update glide with settings of matched brekpoint:\\n   * - window resize to update slider\\n   */\\n  Binder.on('resize', window, throttle(function () {\\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\\n  }, Glide.settings.throttle));\\n\\n  /**\\n   * Resort and update default settings:\\n   * - on reinit via API, so breakpoint matching will be performed with options\\n   */\\n  Events.on('update', function () {\\n    points = sortBreakpoints(points);\\n\\n    defaults = _extends({}, settings);\\n  });\\n\\n  /**\\n   * Unbind resize listener:\\n   * - on destroying, to bring markup to its initial state\\n   */\\n  Events.on('destroy', function () {\\n    Binder.off('resize', window);\\n  });\\n\\n  return Breakpoints;\\n}\\n\\nvar COMPONENTS = {\\n  // Required\\n  Html: Html,\\n  Translate: Translate,\\n  Transition: Transition,\\n  Direction: Direction,\\n  Peek: Peek,\\n  Sizes: Sizes,\\n  Gaps: Gaps,\\n  Move: Move,\\n  Clones: Clones,\\n  Resize: Resize,\\n  Build: Build,\\n  Run: Run,\\n\\n  // Optional\\n  Swipe: Swipe,\\n  Images: Images,\\n  Anchors: Anchors,\\n  Controls: Controls,\\n  Keyboard: Keyboard,\\n  Autoplay: Autoplay,\\n  Breakpoints: Breakpoints\\n};\\n\\nvar Glide$1 = function (_Core) {\\n  inherits(Glide$$1, _Core);\\n\\n  function Glide$$1() {\\n    classCallCheck(this, Glide$$1);\\n    return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\\n  }\\n\\n  createClass(Glide$$1, [{\\n    key: 'mount',\\n    value: function mount() {\\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\\n    }\\n  }]);\\n  return Glide$$1;\\n}(Glide);\\n\\nexport default Glide$1;\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{203:function(t,e,n){var i=n(25).f,r=Function.prototype,o=/^\\s*function ([^ (]*)/;\"name\"in r||n(18)&&i(r,\"name\",{configurable:!0,get:function(){try{return(\"\"+this).match(o)[1]}catch(t){return\"\"}}})},236:function(t,e,n){\"use strict\";var i={type:\"slider\",startAt:0,perView:1,focusAt:0,gap:10,autoplay:!1,hoverpause:!0,keyboard:!0,bound:!1,swipeThreshold:80,dragThreshold:120,perTouch:!1,touchRatio:.5,touchAngle:45,animationDuration:400,rewind:!0,rewindDuration:800,animationTimingFunc:\"cubic-bezier(.165, .840, .440, 1)\",throttle:10,direction:\"ltr\",peek:0,breakpoints:{},classes:{direction:{ltr:\"glide--ltr\",rtl:\"glide--rtl\"},slider:\"glide--slider\",carousel:\"glide--carousel\",swipeable:\"glide--swipeable\",dragging:\"glide--dragging\",cloneSlide:\"glide__slide--clone\",activeNav:\"glide__bullet--active\",activeSlide:\"glide__slide--active\",disabledArrow:\"glide__arrow--disabled\"}};function r(t){console.error(\"[Glide warn]: \"+t)}var o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},s=function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")},u=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},c=function(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e};function l(t){return parseInt(t)}function f(t){return\"string\"==typeof t}function d(t){var e=void 0===t?\"undefined\":o(t);return\"function\"===e||\"object\"===e&&!!t}function h(t){return\"function\"==typeof t}function v(t){return void 0===t}function p(t){return t.constructor===Array}function m(t,e,n){Object.defineProperty(t,e,n)}function g(t,e){var n=a({},t,e);return e.hasOwnProperty(\"classes\")&&(n.classes=a({},t.classes,e.classes),e.classes.hasOwnProperty(\"direction\")&&(n.classes.direction=a({},t.classes.direction,e.classes.direction))),e.hasOwnProperty(\"breakpoints\")&&(n.breakpoints=a({},t.breakpoints,e.breakpoints)),n}var y=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};s(this,t),this.events=e,this.hop=e.hasOwnProperty}return u(t,[{key:\"on\",value:function(t,e){if(p(t))for(var n=0;n<t.length;n++)this.on(t[n],e);this.hop.call(this.events,t)||(this.events[t]=[]);var i=this.events[t].push(e)-1;return{remove:function(){delete this.events[t][i]}}}},{key:\"emit\",value:function(t,e){if(p(t))for(var n=0;n<t.length;n++)this.emit(t[n],e);this.hop.call(this.events,t)&&this.events[t].forEach(function(t){t(e||{})})}}]),t}(),b=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};s(this,t),this._c={},this._t=[],this._e=new y,this.disabled=!1,this.selector=e,this.settings=g(i,n),this.index=this.settings.startAt}return u(t,[{key:\"mount\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this._e.emit(\"mount.before\"),d(t)?this._c=function(t,e,n){var i={};for(var o in e)h(e[o])?i[o]=e[o](t,i,n):r(\"Extension must be a function\");for(var s in i)h(i[s].mount)&&i[s].mount();return i}(this,t,this._e):r(\"You need to provide a object on `mount()`\"),this._e.emit(\"mount.after\"),this}},{key:\"mutate\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return p(t)?this._t=t:r(\"You need to provide a array on `mutate()`\"),this}},{key:\"update\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this.settings=g(this.settings,t),t.hasOwnProperty(\"startAt\")&&(this.index=t.startAt),this._e.emit(\"update\"),this}},{key:\"go\",value:function(t){return this._c.Run.make(t),this}},{key:\"move\",value:function(t){return this._c.Transition.disable(),this._c.Move.make(t),this}},{key:\"destroy\",value:function(){return this._e.emit(\"destroy\"),this}},{key:\"play\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return t&&(this.settings.autoplay=t),this._e.emit(\"play\"),this}},{key:\"pause\",value:function(){return this._e.emit(\"pause\"),this}},{key:\"disable\",value:function(){return this.disabled=!0,this}},{key:\"enable\",value:function(){return this.disabled=!1,this}},{key:\"on\",value:function(t,e){return this._e.on(t,e),this}},{key:\"isType\",value:function(t){return this.settings.type===t}},{key:\"settings\",get:function(){return this._o},set:function(t){d(t)?this._o=t:r(\"Options must be an `object` instance.\")}},{key:\"index\",get:function(){return this._i},set:function(t){this._i=l(t)}},{key:\"type\",get:function(){return this.settings.type}},{key:\"disabled\",get:function(){return this._d},set:function(t){this._d=!!t}}]),t}();function w(){return(new Date).getTime()}function _(t,e,n){var i=void 0,r=void 0,o=void 0,s=void 0,u=0;n||(n={});var a=function(){u=!1===n.leading?0:w(),i=null,s=t.apply(r,o),i||(r=o=null)},c=function(){var c=w();u||!1!==n.leading||(u=c);var l=e-(c-u);return r=this,o=arguments,l<=0||l>e?(i&&(clearTimeout(i),i=null),u=c,s=t.apply(r,o),i||(r=o=null)):i||!1===n.trailing||(i=setTimeout(a,l)),s};return c.cancel=function(){clearTimeout(i),u=0,i=r=o=null},c}var k={ltr:[\"marginLeft\",\"marginRight\"],rtl:[\"marginRight\",\"marginLeft\"]};function S(t){if(t&&t.parentNode){for(var e=t.parentNode.firstChild,n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}return[]}function H(t){return!!(t&&t instanceof window.HTMLElement)}var T='[data-glide-el=\"track\"]';var x=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};s(this,t),this.listeners=e}return u(t,[{key:\"on\",value:function(t,e,n){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];f(t)&&(t=[t]);for(var r=0;r<t.length;r++)this.listeners[t[r]]=n,e.addEventListener(t[r],this.listeners[t[r]],i)}},{key:\"off\",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];f(t)&&(t=[t]);for(var i=0;i<t.length;i++)e.removeEventListener(t[i],this.listeners[t[i]],n)}},{key:\"destroy\",value:function(){delete this.listeners}}]),t}();var O=[\"ltr\",\"rtl\"],A={\">\":\"<\",\"<\":\">\",\"=\":\"=\"};function M(t,e){return{modify:function(t){return e.Direction.is(\"rtl\")?-t:t}}}function C(t,e){return{modify:function(n){return n+e.Gaps.value*t.index}}}function P(t,e){return{modify:function(t){return t+e.Clones.grow/2}}}function L(t,e){return{modify:function(n){if(t.settings.focusAt>=0){var i=e.Peek.value;return d(i)?n-i.before:n-i}return n}}}function j(t,e){return{modify:function(n){var i=e.Gaps.value,r=e.Sizes.width,o=t.settings.focusAt,s=e.Sizes.slideWidth;return\"center\"===o?n-(r/2-s/2):n-s*o-i*o}}}var z=!1;try{var D=Object.defineProperty({},\"passive\",{get:function(){z=!0}});window.addEventListener(\"testPassive\",null,D),window.removeEventListener(\"testPassive\",null,D)}catch(Y){}var E=z,R=[\"touchstart\",\"mousedown\"],W=[\"touchmove\",\"mousemove\"],B=[\"touchend\",\"touchcancel\",\"mouseup\",\"mouseleave\"],G=[\"mousedown\",\"mousemove\",\"mouseup\",\"mouseleave\"];var N='[data-glide-el=\"controls[nav]\"]',q='[data-glide-el^=\"controls\"]';function I(t){return d(t)?(e=t,Object.keys(e).sort().reduce(function(t,n){return t[n]=e[n],t[n],t},{})):(r(\"Breakpoints option must be an object\"),{});var e}var F={Html:function(t,e){var n={mount:function(){this.root=t.selector,this.track=this.root.querySelector(T),this.slides=Array.prototype.slice.call(this.wrapper.children).filter(function(e){return!e.classList.contains(t.settings.classes.cloneSlide)})}};return m(n,\"root\",{get:function(){return n._r},set:function(t){f(t)&&(t=document.querySelector(t)),H(t)?n._r=t:r(\"Root element must be a existing Html node\")}}),m(n,\"track\",{get:function(){return n._t},set:function(t){H(t)?n._t=t:r(\"Could not find track element. Please use \"+T+\" attribute.\")}}),m(n,\"wrapper\",{get:function(){return n.track.children[0]}}),n},Translate:function(t,e,n){var i={set:function(n){var i=function(t,e,n){var i=[C,P,L,j].concat(t._t,[M]);return{mutate:function(o){for(var s=0;s<i.length;s++){var u=i[s];h(u)&&h(u().modify)?o=u(t,e,n).modify(o):r(\"Transformer should be a function that returns an object with `modify()` method\")}return o}}}(t,e).mutate(n);e.Html.wrapper.style.transform=\"translate3d(\"+-1*i+\"px, 0px, 0px)\"},remove:function(){e.Html.wrapper.style.transform=\"\"}};return n.on(\"move\",function(r){var o=e.Gaps.value,s=e.Sizes.length,u=e.Sizes.slideWidth;return t.isType(\"carousel\")&&e.Run.isOffset(\"<\")?(e.Transition.after(function(){n.emit(\"translate.jump\"),i.set(u*(s-1))}),i.set(-u-o*s)):t.isType(\"carousel\")&&e.Run.isOffset(\">\")?(e.Transition.after(function(){n.emit(\"translate.jump\"),i.set(0)}),i.set(u*s+o*s)):i.set(r.movement)}),n.on(\"destroy\",function(){i.remove()}),i},Transition:function(t,e,n){var i=!1,r={compose:function(e){var n=t.settings;return i?e+\" 0ms \"+n.animationTimingFunc:e+\" \"+this.duration+\"ms \"+n.animationTimingFunc},set:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"transform\";e.Html.wrapper.style.transition=this.compose(t)},remove:function(){e.Html.wrapper.style.transition=\"\"},after:function(t){setTimeout(function(){t()},this.duration)},enable:function(){i=!1,this.set()},disable:function(){i=!0,this.set()}};return m(r,\"duration\",{get:function(){var n=t.settings;return t.isType(\"slider\")&&e.Run.offset?n.rewindDuration:n.animationDuration}}),n.on(\"move\",function(){r.set()}),n.on([\"build.before\",\"resize\",\"translate.jump\"],function(){r.disable()}),n.on(\"run\",function(){r.enable()}),n.on(\"destroy\",function(){r.remove()}),r},Direction:function(t,e,n){var i={mount:function(){this.value=t.settings.direction},resolve:function(t){var e=t.slice(0,1);return this.is(\"rtl\")?t.split(e).join(A[e]):t},is:function(t){return this.value===t},addClass:function(){e.Html.root.classList.add(t.settings.classes.direction[this.value])},removeClass:function(){e.Html.root.classList.remove(t.settings.classes.direction[this.value])}};return m(i,\"value\",{get:function(){return i._v},set:function(t){O.indexOf(t)>-1?i._v=t:r(\"Direction value must be `ltr` or `rtl`\")}}),n.on([\"destroy\",\"update\"],function(){i.removeClass()}),n.on(\"update\",function(){i.mount()}),n.on([\"build.before\",\"update\"],function(){i.addClass()}),i},Peek:function(t,e,n){var i={mount:function(){this.value=t.settings.peek}};return m(i,\"value\",{get:function(){return i._v},set:function(t){d(t)?(t.before=l(t.before),t.after=l(t.after)):t=l(t),i._v=t}}),m(i,\"reductor\",{get:function(){var e=i.value,n=t.settings.perView;return d(e)?e.before/n+e.after/n:2*e/n}}),n.on([\"resize\",\"update\"],function(){i.mount()}),i},Sizes:function(t,e,n){var i={setupSlides:function(){for(var t=this.slideWidth+\"px\",n=e.Html.slides,i=0;i<n.length;i++)n[i].style.width=t},setupWrapper:function(t){e.Html.wrapper.style.width=this.wrapperSize+\"px\"},remove:function(){for(var t=e.Html.slides,n=0;n<t.length;n++)t[n].style.width=\"\";e.Html.wrapper.style.width=\"\"}};return m(i,\"length\",{get:function(){return e.Html.slides.length}}),m(i,\"width\",{get:function(){return e.Html.root.offsetWidth}}),m(i,\"wrapperSize\",{get:function(){return i.slideWidth*i.length+e.Gaps.grow+e.Clones.grow}}),m(i,\"slideWidth\",{get:function(){return i.width/t.settings.perView-e.Peek.reductor-e.Gaps.reductor}}),n.on([\"build.before\",\"resize\",\"update\"],function(){i.setupSlides(),i.setupWrapper()}),n.on(\"destroy\",function(){i.remove()}),i},Gaps:function(t,e,n){var i={apply:function(t){for(var n=0,i=t.length;n<i;n++){var r=t[n].style,o=e.Direction.value;r[k[o][0]]=0!==n?this.value/2+\"px\":\"\",n!==t.length-1?r[k[o][1]]=this.value/2+\"px\":r[k[o][1]]=\"\"}},remove:function(t){for(var e=0,n=t.length;e<n;e++){var i=t[e].style;i.marginLeft=\"\",i.marginRight=\"\"}}};return m(i,\"value\",{get:function(){return l(t.settings.gap)}}),m(i,\"grow\",{get:function(){return i.value*(e.Sizes.length-1)}}),m(i,\"reductor\",{get:function(){var e=t.settings.perView;return i.value*(e-1)/e}}),n.on([\"build.after\",\"update\"],_(function(){i.apply(e.Html.wrapper.children)},30)),n.on(\"destroy\",function(){i.remove(e.Html.wrapper.children)}),i},Move:function(t,e,n){var i={mount:function(){this._o=0},make:function(){var t=this,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.offset=i,n.emit(\"move\",{movement:this.value}),e.Transition.after(function(){n.emit(\"move.after\",{movement:t.value})})}};return m(i,\"offset\",{get:function(){return i._o},set:function(t){i._o=v(t)?0:l(t)}}),m(i,\"translate\",{get:function(){return e.Sizes.slideWidth*t.index}}),m(i,\"value\",{get:function(){var t=this.offset,n=this.translate;return e.Direction.is(\"rtl\")?n+t:n-t}}),n.on([\"build.before\",\"run\"],function(){i.make()}),i},Clones:function(t,e,n){var i={mount:function(){this.items=[],t.isType(\"carousel\")&&(this.items=this.collect())},collect:function(){for(var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=e.Html.slides,r=t.settings,o=r.perView,s=r.classes,u=o+ +!!t.settings.peek,a=i.slice(0,u),c=i.slice(-u),l=0;l<Math.max(1,Math.floor(o/i.length));l++){for(var f=0;f<a.length;f++){var d=a[f].cloneNode(!0);d.classList.add(s.cloneSlide),n.push(d)}for(var h=0;h<c.length;h++){var v=c[h].cloneNode(!0);v.classList.add(s.cloneSlide),n.unshift(v)}}return n},append:function(){for(var t=this.items,n=e.Html,i=n.wrapper,r=n.slides,o=Math.floor(t.length/2),s=t.slice(0,o).reverse(),u=t.slice(o,t.length),a=e.Sizes.slideWidth+\"px\",c=0;c<u.length;c++)i.appendChild(u[c]);for(var l=0;l<s.length;l++)i.insertBefore(s[l],r[0]);for(var f=0;f<t.length;f++)t[f].style.width=a},remove:function(){for(var t=this.items,n=0;n<t.length;n++)e.Html.wrapper.removeChild(t[n])}};return m(i,\"grow\",{get:function(){return(e.Sizes.slideWidth+e.Gaps.value)*i.items.length}}),n.on(\"update\",function(){i.remove(),i.mount(),i.append()}),n.on(\"build.before\",function(){t.isType(\"carousel\")&&i.append()}),n.on(\"destroy\",function(){i.remove()}),i},Resize:function(t,e,n){var i=new x,r={mount:function(){this.bind()},bind:function(){i.on(\"resize\",window,_(function(){n.emit(\"resize\")},t.settings.throttle))},unbind:function(){i.off(\"resize\",window)}};return n.on(\"destroy\",function(){r.unbind(),i.destroy()}),r},Build:function(t,e,n){var i={mount:function(){n.emit(\"build.before\"),this.typeClass(),this.activeClass(),n.emit(\"build.after\")},typeClass:function(){e.Html.root.classList.add(t.settings.classes[t.settings.type])},activeClass:function(){var n=t.settings.classes,i=e.Html.slides[t.index];i&&(i.classList.add(n.activeSlide),S(i).forEach(function(t){t.classList.remove(n.activeSlide)}))},removeClasses:function(){var n=t.settings.classes;e.Html.root.classList.remove(n[t.settings.type]),e.Html.slides.forEach(function(t){t.classList.remove(n.activeSlide)})}};return n.on([\"destroy\",\"update\"],function(){i.removeClasses()}),n.on([\"resize\",\"update\"],function(){i.mount()}),n.on(\"move.after\",function(){i.activeClass()}),i},Run:function(t,e,n){var i={mount:function(){this._o=!1},make:function(i){var r=this;t.disabled||(t.disable(),this.move=i,n.emit(\"run.before\",this.move),this.calculate(),n.emit(\"run\",this.move),e.Transition.after(function(){r.isStart()&&n.emit(\"run.start\",r.move),r.isEnd()&&n.emit(\"run.end\",r.move),(r.isOffset(\"<\")||r.isOffset(\">\"))&&(r._o=!1,n.emit(\"run.offset\",r.move)),n.emit(\"run.after\",r.move),t.enable()}))},calculate:function(){var e=this.move,n=this.length,i=e.steps,o=e.direction,s=\"number\"==typeof l(i)&&0!==l(i);switch(o){case\">\":\">\"===i?t.index=n:this.isEnd()?t.isType(\"slider\")&&!t.settings.rewind||(this._o=!0,t.index=0):s?t.index+=Math.min(n-t.index,-l(i)):t.index++;break;case\"<\":\"<\"===i?t.index=0:this.isStart()?t.isType(\"slider\")&&!t.settings.rewind||(this._o=!0,t.index=n):s?t.index-=Math.min(t.index,l(i)):t.index--;break;case\"=\":t.index=i;break;default:r(\"Invalid direction pattern [\"+o+i+\"] has been used\")}},isStart:function(){return 0===t.index},isEnd:function(){return t.index===this.length},isOffset:function(t){return this._o&&this.move.direction===t}};return m(i,\"move\",{get:function(){return this._m},set:function(t){var e=t.substr(1);this._m={direction:t.substr(0,1),steps:e?l(e)?l(e):e:0}}}),m(i,\"length\",{get:function(){var n=t.settings,i=e.Html.slides.length;return t.isType(\"slider\")&&\"center\"!==n.focusAt&&n.bound?i-1-(l(n.perView)-1)+l(n.focusAt):i-1}}),m(i,\"offset\",{get:function(){return this._o}}),i},Swipe:function(t,e,n){var i=new x,r=0,o=0,s=0,u=!1,a=!!E&&{passive:!0},c={mount:function(){this.bindSwipeStart()},start:function(e){if(!u&&!t.disabled){this.disable();var i=this.touches(e);r=null,o=l(i.pageX),s=l(i.pageY),this.bindSwipeMove(),this.bindSwipeEnd(),n.emit(\"swipe.start\")}},move:function(i){if(!t.disabled){var u=t.settings,a=u.touchAngle,c=u.touchRatio,f=u.classes,d=this.touches(i),h=l(d.pageX)-o,v=l(d.pageY)-s,p=Math.abs(h<<2),m=Math.abs(v<<2),g=Math.sqrt(p+m),y=Math.sqrt(m);if(!(180*(r=Math.asin(y/g))/Math.PI<a))return!1;i.stopPropagation(),e.Move.make(h*parseFloat(c)),e.Html.root.classList.add(f.dragging),n.emit(\"swipe.move\")}},end:function(i){if(!t.disabled){var s=t.settings,u=this.touches(i),a=this.threshold(i),c=u.pageX-o,f=180*r/Math.PI,d=Math.round(c/e.Sizes.slideWidth);this.enable(),c>a&&f<s.touchAngle?(s.perTouch&&(d=Math.min(d,l(s.perTouch))),e.Direction.is(\"rtl\")&&(d=-d),e.Run.make(e.Direction.resolve(\"<\"+d))):c<-a&&f<s.touchAngle?(s.perTouch&&(d=Math.max(d,-l(s.perTouch))),e.Direction.is(\"rtl\")&&(d=-d),e.Run.make(e.Direction.resolve(\">\"+d))):e.Move.make(),e.Html.root.classList.remove(s.classes.dragging),this.unbindSwipeMove(),this.unbindSwipeEnd(),n.emit(\"swipe.end\")}},bindSwipeStart:function(){var n=this,r=t.settings;r.swipeThreshold&&i.on(R[0],e.Html.wrapper,function(t){n.start(t)},a),r.dragThreshold&&i.on(R[1],e.Html.wrapper,function(t){n.start(t)},a)},unbindSwipeStart:function(){i.off(R[0],e.Html.wrapper,a),i.off(R[1],e.Html.wrapper,a)},bindSwipeMove:function(){var n=this;i.on(W,e.Html.wrapper,_(function(t){n.move(t)},t.settings.throttle),a)},unbindSwipeMove:function(){i.off(W,e.Html.wrapper,a)},bindSwipeEnd:function(){var t=this;i.on(B,e.Html.wrapper,function(e){t.end(e)})},unbindSwipeEnd:function(){i.off(B,e.Html.wrapper)},touches:function(t){return G.indexOf(t.type)>-1?t:t.touches[0]||t.changedTouches[0]},threshold:function(e){var n=t.settings;return G.indexOf(e.type)>-1?n.dragThreshold:n.swipeThreshold},enable:function(){return u=!1,e.Transition.enable(),this},disable:function(){return u=!0,e.Transition.disable(),this}};return n.on(\"build.after\",function(){e.Html.root.classList.add(t.settings.classes.swipeable)}),n.on(\"destroy\",function(){c.unbindSwipeStart(),c.unbindSwipeMove(),c.unbindSwipeEnd(),i.destroy()}),c},Images:function(t,e,n){var i=new x,r={mount:function(){this.bind()},bind:function(){i.on(\"dragstart\",e.Html.wrapper,this.dragstart)},unbind:function(){i.off(\"dragstart\",e.Html.wrapper)},dragstart:function(t){t.preventDefault()}};return n.on(\"destroy\",function(){r.unbind(),i.destroy()}),r},Anchors:function(t,e,n){var i=new x,r=!1,o=!1,s={mount:function(){this._a=e.Html.wrapper.querySelectorAll(\"a\"),this.bind()},bind:function(){i.on(\"click\",e.Html.wrapper,this.click)},unbind:function(){i.off(\"click\",e.Html.wrapper)},click:function(t){o&&(t.stopPropagation(),t.preventDefault())},detach:function(){if(o=!0,!r){for(var t=0;t<this.items.length;t++)this.items[t].draggable=!1,this.items[t].setAttribute(\"data-href\",this.items[t].getAttribute(\"href\")),this.items[t].removeAttribute(\"href\");r=!0}return this},attach:function(){if(o=!1,r){for(var t=0;t<this.items.length;t++)this.items[t].draggable=!0,this.items[t].setAttribute(\"href\",this.items[t].getAttribute(\"data-href\"));r=!1}return this}};return m(s,\"items\",{get:function(){return s._a}}),n.on(\"swipe.move\",function(){s.detach()}),n.on(\"swipe.end\",function(){e.Transition.after(function(){s.attach()})}),n.on(\"destroy\",function(){s.attach(),s.unbind(),i.destroy()}),s},Controls:function(t,e,n){var i=new x,r=!!E&&{passive:!0},o={mount:function(){this._n=e.Html.root.querySelectorAll(N),this._c=e.Html.root.querySelectorAll(q),this.addBindings()},setActive:function(){for(var t=0;t<this._n.length;t++)this.addClass(this._n[t].children)},removeActive:function(){for(var t=0;t<this._n.length;t++)this.removeClass(this._n[t].children)},addClass:function(e){var n=t.settings,i=e[t.index];i&&(i.classList.add(n.classes.activeNav),S(i).forEach(function(t){t.classList.remove(n.classes.activeNav)}))},removeClass:function(e){var n=e[t.index];n&&n.classList.remove(t.settings.classes.activeNav)},addBindings:function(){for(var t=0;t<this._c.length;t++)this.bind(this._c[t].children)},removeBindings:function(){for(var t=0;t<this._c.length;t++)this.unbind(this._c[t].children)},bind:function(t){for(var e=0;e<t.length;e++)i.on(\"click\",t[e],this.click),i.on(\"touchstart\",t[e],this.click,r)},unbind:function(t){for(var e=0;e<t.length;e++)i.off([\"click\",\"touchstart\"],t[e])},click:function(t){t.preventDefault(),e.Run.make(e.Direction.resolve(t.currentTarget.getAttribute(\"data-glide-dir\")))}};return m(o,\"items\",{get:function(){return o._c}}),n.on([\"mount.after\",\"move.after\"],function(){o.setActive()}),n.on(\"destroy\",function(){o.removeBindings(),o.removeActive(),i.destroy()}),o},Keyboard:function(t,e,n){var i=new x,r={mount:function(){t.settings.keyboard&&this.bind()},bind:function(){i.on(\"keyup\",document,this.press)},unbind:function(){i.off(\"keyup\",document)},press:function(t){39===t.keyCode&&e.Run.make(e.Direction.resolve(\">\")),37===t.keyCode&&e.Run.make(e.Direction.resolve(\"<\"))}};return n.on([\"destroy\",\"update\"],function(){r.unbind()}),n.on(\"update\",function(){r.mount()}),n.on(\"destroy\",function(){i.destroy()}),r},Autoplay:function(t,e,n){var i=new x,r={mount:function(){this.start(),t.settings.hoverpause&&this.bind()},start:function(){var n=this;t.settings.autoplay&&v(this._i)&&(this._i=setInterval(function(){n.stop(),e.Run.make(\">\"),n.start()},this.time))},stop:function(){this._i=clearInterval(this._i)},bind:function(){var t=this;i.on(\"mouseover\",e.Html.root,function(){t.stop()}),i.on(\"mouseout\",e.Html.root,function(){t.start()})},unbind:function(){i.off([\"mouseover\",\"mouseout\"],e.Html.root)}};return m(r,\"time\",{get:function(){var n=e.Html.slides[t.index].getAttribute(\"data-glide-autoplay\");return l(n||t.settings.autoplay)}}),n.on([\"destroy\",\"update\"],function(){r.unbind()}),n.on([\"run.before\",\"pause\",\"destroy\",\"swipe.start\",\"update\"],function(){r.stop()}),n.on([\"run.after\",\"play\",\"swipe.end\"],function(){r.start()}),n.on(\"update\",function(){r.mount()}),n.on(\"destroy\",function(){i.destroy()}),r},Breakpoints:function(t,e,n){var i=new x,r=t.settings,o=I(r.breakpoints),s=a({},r),u={match:function(t){if(void 0!==window.matchMedia)for(var e in t)if(t.hasOwnProperty(e)&&window.matchMedia(\"(max-width: \"+e+\"px)\").matches)return t[e];return s}};return a(r,u.match(o)),i.on(\"resize\",window,_(function(){t.settings=g(r,u.match(o))},t.settings.throttle)),n.on(\"update\",function(){o=I(o),s=a({},r)}),n.on(\"destroy\",function(){i.off(\"resize\",window)}),u}},V=function(t){function e(){return s(this,e),c(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,b),u(e,[{key:\"mount\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return function t(e,n,i){null===e&&(e=Function.prototype);var r=Object.getOwnPropertyDescriptor(e,n);if(void 0===r){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,i)}if(\"value\"in r)return r.value;var s=r.get;return void 0!==s?s.call(i):void 0}(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),\"mount\",this).call(this,a({},F,t))}}]),e}();e.a=V}}]);","extractedComments":[]}